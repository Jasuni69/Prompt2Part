module post_4mm(colour, thickness, display_colour = false) { //! Draw a 4mm binding post
    vitamin(str("post_4mm(\"", colour, "\", 3", arg(display_colour, false), "): 4mm jack binding post ", colour));

    actual_colour = display_colour ? display_colour : colour;
    d = post_4mm_diameter();
    base_h = 5;
    collar_t = post_4mm_spigot_h;

    post_od = 9.5;
    post_metal = 0.2;
    thread_d = 3.6;
    thread_p = 0.66;
    thread_l = 15;
    post_d = 7;
    post_h = 14;

    ringterm = ["", 6.3, 3.8, 16.7, 3, 1.6, 0.3, M4_dome_screw];

    module washer() color(silver) {
        washer_t = 0.65;

        tube(or = 7.6 / 2, ir = thread_d / 2, h = washer_t, center = false);

        translate_z(washer_t)
            children();
    }

    module nut() {
        nut_t = 2.3;

        draw_nut(6.3 / cos(30), thread_d, nut_t, thread_p, silver, show_threads);

        translate_z(nut_t)
            children();
    }

    module spigot()
        hull()
            for(end = [-1, 1])
                translate([0, post_4mm_hole_radius + end * (post_4mm_spigot_l - post_4mm_spigot_w / 2)])
                    circle(d = post_4mm_spigot_w);

    explode(20, offset = -thread_l) {
        color(actual_colour) {
            cylinder(d = d, h = base_h);

            translate_z(-collar_t)
                linear_extrude(base_h) {
                    circle(post_4mm_hole_radius - 0.1);

                    spigot();
                }

            translate_z(base_h + 1)
                for(i = [0 : 7])
                    rotate(i * 360 / 8)
                        render() difference() {
                            rotate_extrude(angle = 360 / 8)
                                polygon([
                                    [post_d / 2, 0],
                                    [post_d / 2, 2],
                                    [post_d / 2, 17.5],
                                    [11 / 2,     17.5],
                                    [12.5 / 2,   0]
                                ]);

                            rotate(180 /8)
                                hull() {
                                    translate([6.5, 0, 3])
                                        sphere(d = 2.5);

                                    translate([6, 0, 17.5])
                                        cylinder(d = 2.5, h = eps);
                                }
                }
        }

        color(silver) {
            translate_z(post_metal)
                cylinder(d = post_od, h = base_h);

            translate_z(base_h + post_metal + 0.1)
                cylinder(d = post_od, h = 2);

            rotate_extrude() difference() {
                square([post_d / 2, base_h + post_metal + post_h]);

                translate([0, base_h + post_metal + 1])
                    square([2, post_h]);

            }
            if(!show_threads)
                vflip()
                    cylinder(d = thread_d, h = thread_l);
        }
        if(show_threads)
            vflip()
                male_metric_thread(thread_d, thread_p, thread_l, false, colour = silver);
    }
    explode(-15)
        color(actual_colour) {
            translate_z(-thickness - base_h) {
                linear_extrude(base_h)
                    difference() {
                        circle(d = d);

                        circle(post_4mm_hole_radius);

                        offset(0.1) spigot();
                    }
                tube(or = d / 2, ir = thread_d / 2, h = collar_t, center = false);
            }
        }
    translate_z(-thickness - base_h)
        explode(-20, true)
            vflip()
                not_on_bom()
                    washer()
                    explode(5, true) nut()
                    explode(5, true) ring_terminal(ringterm)
                    explode(5, true) washer()
                    explode(5, true) nut();
}