module generateShapeFillet (Shape, useCenter, Width, Length, Depth, filletTop, filletBorrom, Radius, Rotation, Polygon=undef, expand=0)
//-- Creates a shape centered at 0,0 in the XY and from 0-thickness in the Z with a fillet on the top and bottom (optional)
{ 
  Thickness = Depth;
  filletRadiusTop = filletTop; 
  filletRadiusBottom = filletBorrom; 
  
  rotate([0,0,Rotation])
  {
    extrudeWithRadius(Thickness,filletRadiusBottom,-filletRadiusTop,Thickness/printerLayerHeight)  
    {
      offset(expand)
      { 
        if (Shape == yappCircle)
        {
          translate([(useCenter) ? 0 : Radius,(useCenter) ? 0 : Radius,0])
          circle(r=Radius);
        } 
        else if (Shape == yappRing)
        {
          connectorCount=(Width==0) ? 0 : (Width>0) ? 1 : 2; 
          connectorWidth=abs(Width);
          translate([(useCenter) ? 0 : Radius,(useCenter) ? 0 : Radius,0])
            difference() {
                difference() {
                    circle(r=Radius);
                    circle(r=Length);
                }
                if (connectorCount>0) 
                {
                  square([connectorWidth, Radius*2], center=true);
                  if (connectorCount>1) 
                  {
                    rotate([0,0,90])
                    square([connectorWidth, Radius*2], center=true);
                  }
                }
            }
        } 
        else if (Shape == yappRectangle)
        {
          translate([(useCenter) ? 0 : Width/2,(useCenter) ? 0 : Length/2,0])
          {
            square([Width,Length], center=true); 
          }
        } 
        else if (Shape == yappRoundedRect)
        {
          {
            translate([(useCenter) ? 0 : Width/2,(useCenter) ? 0 : Length/2,0])
            roundedRectangle2D(Width,Length,Radius);
          }
        }
        else if (Shape == yappPolygon)
        {
          translate([(useCenter) ? 0 : Width/2,(useCenter) ? 0 : Length/2,0])
          scale([Width,Length,0])
          {
            polygon(Polygon);
          }
        }
        else if (Shape == yappCircleWithFlats)
        {
          translate([(useCenter) ? 0 : Radius,(useCenter) ? 0 : Radius,0])
          {
            intersection()
            { 
              circle(r=Radius);    
              square([Width, Radius*2], center=true);
            }
          }
        }
        else if (Shape == yappCircleWithKey)
        {
          translate([(useCenter) ? 0 : Radius,(useCenter) ? 0 : Radius,0])
          {
            intersect = Radius - sqrt(Radius^2 - (Width/2)^2);  
            depth = Length;
            //--Add the Actual Key
            if (depth <= 0) 
            {
              //-- Create the circle with the flat for the key
              difference()
              {
                circle(r=Radius); 
                  translate ([Radius ,0,0]) 
                    square([intersect*2, Width ], center=true);
              }
              //-- Add the outer cut
             translate ([Radius - intersect + 0,0,0]) 
                square([abs(depth*2), Width ], center=true);
            }
            else if (depth > 0) 
            {
              //-- Create the circle with the flat for the key
              difference()
              {
                circle(r=Radius);  
                //-- Remove the flat
                translate ([Radius - depth/2,0,0]) 
                  square([intersect*2 + depth, Width ], center=true);
              }
            }
          }
        } // if yappCircleWithKey

      }
    }
  }
} //-- generateShape()


//===========================================================