module blower_fan(type, casing_is_square) {
    module squarish(s, n) {
        polygon([
            for(i = [0 : n]) [i * s.x / n,  s.y + (i % 2) * eps],
            for(i = [0 : n]) [s.x - i * s.x / n, (i % 2) * eps],
        ]);
    }

    depth = blower_depth(type);
    blade_ir = blower_hub(type) / 2 + 0.5; // slight gap between main part of blades and hub
    blade_len = casing_is_square
        ? (blower_bore(type) - 1) / 2 - blade_ir // fan constrained by bore hole
        : blower_width(type) - blower_axis(type).x- blower_wall(type) - blade_ir; // fan extends to casing
    blade_thickness = 0.75;
    blade_count = 25;

    base_offset = 1;
    translate([blower_axis(type).x, blower_axis(type).y, blower_base(type) + base_offset])
        linear_extrude(blower_hub_height(type) - 0.5 - blower_base(type) - base_offset, center = false, convexity = 4, twist = -30, slices = round(depth / 2))
            for(i = [0 : blade_count - 1])
                rotate((360 * i) / blade_count)
                    translate([blade_ir, -blade_thickness / 2])
                        squarish([blade_len, blade_thickness], round(blade_len / 2));
}