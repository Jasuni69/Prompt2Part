module veroboard(type) { //! Draw specified veroboard with missing tracks and track breaks
    holes = vero_holes(type);
    strips = vero_strips(type);
    pitch = vero_pitch(type);
    length = holes * pitch;
    width = strips * pitch;
    hole_d = 1;
    tw = vero_track_width(type);
    colour = vero_fr4(type) ? "#BEB564" : "goldenrod";
    tc = vero_fr4(type) ? "silver" : copper;
    no_track = vero_no_track(type);
    solid = vero_solid_tracks(type);

    vitamin(str("veroboard(", type[0], "): Veroboard ", holes, " holes x ", strips, " strips"));

    $fs = fs; $fa = fa;

    color(colour) linear_extrude(vero_thickness(type))
        difference() {
            rounded_square([length, width], r = 0.5, center = true);

            for(y = [0 : strips - 1])
                if(!in(solid, y))
                    for(x = [0 : holes - 1])
                        vero_grid_pos(type, x, y)
                            circle(d = hole_d);

            vero_mounting_hole_positions(type)
                circle(r = screw_radius(vero_screw(type)));
        }

    color(tc) vflip() linear_extrude(vero_track_thickness(type))
        difference() {
            vflip()
                for(y = [0 : strips -1])
                    translate([0, y * pitch - (strips - 1) * pitch / 2])
                        if(!in(no_track, y))
                            difference() {
                                square([length - (pitch - tw), tw], center = true);

                                if(!in(solid, y))
                                    for(x = [0 : holes - 1])
                                        translate([x * pitch - (holes - 1) * pitch / 2, 0])
                                            circle(d = hole_d);
                            }
            vflip() {
                vero_mounting_hole_positions(type)
                    for(y = [-1 : 1])
                        hull()
                            for(x = [-1, 1])
                                translate([x, y] * pitch)
                                    circle(d = pitch * 1.1);

                for(p = vero_breaks(type))
                    hull() {
                        for(x = p.x)
                            vero_grid_pos(type, x, p.y)
                                if(ceil(x) == x)
                                    circle(d = pitch * 1.1);
                                else
                                    square([pitch * 0.3, pitch], center = true);
                    }
            }
        }
}