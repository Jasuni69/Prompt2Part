function _pb_smooth_cubic(last=[], args=[], rel=false, angle, ctrl_pts, _i=0, _g, _r=[]) = let(
    _g = _g==undef? pb_groupsOf(4, args)[1] : _g,
    b = _g[_i],
    p0 = last,
    c0 = len(ctrl_pts[1])==2? ctrl_pts[1] : p0,
    c1 = rel? last + [b[0],b[1]] : [b[0],b[1]],
    p1 = rel? last + [b[2],b[3]] : [b[2],b[3]],
    cn = pb_reflectPntOn(c1,p1),
    _r = concat(_r, pb_bezier_cubic_curve(p0, c0, c1, p1, skip_first=true))) _i==len(_g)-1? [_r,[], pb_calcExitAngle(_r),[[],cn]] : _pb_smooth_cubic(p1, args, rel, angle, [[],cn], _i+1, _g, _r);