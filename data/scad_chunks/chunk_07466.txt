module Vorterantrotor(h=40,twist=360,scale=1,zahn=0,rU=10,achsloch=4,ripple=0,caps=2,caps2=0,capdia=6.5,capdia2=0,screw=1.40,screw2=0,screwrot=60,rund=0.5,name,help)
{
 $fn=0;
 capdia2=capdia2?capdia2:capdia;
 caps2=caps2?caps2:caps;
 rU=rU-rund;//*sqrt(3)/1.5;
 r=rU/(sqrt(3)/3);  
s= h/(rU*PI*2*(twist/360));
    rI=r-rU;
 InfoTxt("Vorterantrotor",["Umkreis ∅",2*rU,"Teilradius",r,"Innen∅",rI*2,"Steigung",str(s*100,"%")," Winkel",str(atan(s),"°")],name);  
  HelpTxt("Vorterantrotor",["h","40,twist=360,scale=1,zahn=0,rU=10,achsloch=4,ripple=0,caps=2,caps2=0,capdia=6.5,capdia2=0,screw=1.40,screw2=0,screwrot=60"],help);
  
 if(zahn)
 {
     Col(3)T(z=h+2*caps)stirnrad(modul=1.5, zahnzahl=zahn, hoehe=1.5, bohrung=achsloch, eingriffswinkel = 20, schraegungswinkel = 0);
 }
 difference()
 {   
        T(z=caps)union()
        {
           if (caps){T(z=h)rotate(-twist) hull()//Endcap oben
            { 
                linear_extrude(.001)offset(rund)intersection_for (i=[0,120,240])
                {
                  rotate(i)T(rU)  circle(r=r);

                }
                T(z=caps2){
                    if(!screw2)cylinder(0.001,d=capdia2);
                    if(screw2)rotate(screwrot)linear_extrude(.001)offset(rund)intersection_for (i=[0,120,240])
                {
                  rotate(i)T(rU*screw2)  circle(r=r);

                }}
            }
                      T(z=0) hull()//Endcap unten
            { 
               T(z=-0.01)linear_extrude(.001)offset(rund)intersection_for (i=[0,120,240])
                {
                  rotate(i)T(rU)  circle(r=r);

                }
                T(z=-caps){
                    if(!screw)cylinder(0.01,d=capdia);
                    if(screw)rotate(screwrot)linear_extrude(.001)offset(rund)intersection_for (i=[0,120,240])
                {
                  rotate(i)T(rU*screw)  circle(r=r);

                }}
            } 
         }
            
            
         linear_extrude(h,twist=twist,scale=scale,convexity=5)//Läufer
                offset(rund)intersection_for (i=[0,120,240])
                {
                  rotate(i)T(rU)  circle(r=r);

                }
            
        }
     if(ripple)cylinder(200,d=6,center=true);//center
     if(ripple) Linear(e=50,s=73,x=0,z=1)Torus(+2,2.8,fn2=6,fn=50);//center ripple
     cylinder(200,d=achsloch,center=true);//center   
       
    }
    
    
} 

/** \name Gardena
\page Products
Gardena() creates a Gardena hose coupling
\param l base height
\param r base hole radius
\param ir top hole
\param or base outside radius
\center -1,0,1
\param help help
*/

//Cut(z=-10)Gardena(l=+5);