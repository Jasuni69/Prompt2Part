module hinge_male(type, female = false) {       //! The half with the stationary pin
    r = hinge_radius(type);
    w = hinge_width(type);
    t = hinge_thickness(type);
    kr = hinge_knuckle_dia(type) / 2;
    pr = hinge_pin_dia(type) / 2;
    assert(kr > pr, "knuckle diameter must be bigger than the pin diameter");

    n = hinge_knuckles(type);
    assert(n >= 3, "must be at least three knuckles");
    mn = ceil(n / 2);                           // Male knuckles
    fn = floor(n / 2);                          // Female knuckles
    gap = hinge_clearance(type);
    mw = (w - (n - 1) * gap) / 2 / mn;          // Male knuckle width
    fw = (w - (n - 1) * gap) / 2 / fn;          // Female knuckle width

    teardrop_r = kr / cos(22.5);                // The corner on the teardrop
    inset = sqrt(sqr(teardrop_r + gap) - sqr(kr - t)) - kr;

    stl(str("hinge_", female ? "fe": "", "male_", type[0]))
        union() {
            linear_extrude(t)
                difference() {
                    hull() {
                        for(side = [-1, 1])
                            translate([side * (w / 2 - r), hinge_depth(type) - r])
                                circle4n(r);

                        translate([-w / 2, inset])
                            square([w, eps]);
                    }
                    hinge_screw_positions(type)
                        poly_circle(screw_clearance_radius(hinge_screw(type)));
                }

            pitch = mw + gap + fw + gap;
            dir = female ? -1 : 1;
            translate([0, -kr, kr])
                rotate([90, 0, -90])
                    for(z = [0 : (female ? fn : mn) - 1])
                        translate_z(-dir * w / 2 + z * dir * pitch + (female ? -fw - mw - gap : 0))
                            linear_extrude(female ? fw : mw)
                                difference() {
                                    hull() {
                                        rotate(180)
                                            teardrop(r = kr, h = 0);

                                        translate([-kr - inset - eps, -kr])
                                            square([eps, t]);
                                    }
                                    teardrop_plus(r = pr + (female ? gap : 0), h = 0);
                                }
        }
}