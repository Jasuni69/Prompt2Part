function _get_obj_type(ind,geom,anchor,prof) =
     geom[0]=="spheroid" ? "sphere"
   : geom[0]=="conoid" ? let(
                             axis = geom[5],
                             anchor = rot(from=axis, to=UP, p=anchor)
                         )
                         anchor==UP || anchor==DOWN ? "plane"
                       : assert(geom[1]==geom[2], str("For anchors other than TOP/BOTTOM, cylinder from desc",ind," must be non-conical, with same size at each end"))
                         assert(geom[4]==[0,0], str("For anchors other than TOP/BOTTOM, cylinder from desc",ind," must be a right-angle cylinder with zero shift"))
                         assert(anchor.z==0,str("Anchor for cylinder for desc",ind," is on the cylinder's edge.  This is not supported."))
                         "cyl"
   : in_list(geom[0],["prismoid","vnf_extent","vnf_isect"]) ?
                           assert(geom[0]!="prismoid" || sum(v_abs(anchor))<3, "Cannot give a corner anchor for prismoid geometry")
                           let(
                                anch = _find_anchor(anchor, geom),
                                edge_angle = len(anch)==5 ? struct_val(anch[4],"edge_angle") : undef
                           )
                           is_undef(edge_angle)
                              ? "plane"
                              : let(
                                    y = 20*max(v_abs(full_flatten(prof))),
                                    x = y/tan(edge_angle/2)
                                )
                                [[x,-y],[0,0], [x,y]]
   : starts_with(geom[0], "extrusion") ?
                   anchor==UP || anchor==DOWN ? "plane"
                 :
                   assert(geom[3]==0, str("Extrusion in desc", ind, " has nonzero twist, which is not supported."))
                   assert(geom[5]==[0,0], str("Extrusion in desc", ind, " has nonzero shift, which is not supported."))
                   assert(geom[4]==[1,1], str("Extrusion in desc",ind, " is conical, which is not supported."))
                   assert(anchor.z==0,str("Anchor for extrusion for desc",ind," is on the extrusions top/bottom edge.  This is not supported."))   
                   let(reg = region_parts(geom[1]))
                   assert(len(reg)==1, "Region has multiple disconnected components, which is not supported")
                   let(     // Here we shift the region so that the anchor point is at the origin
                        anch = _find_anchor(anchor, geom)
                   )
                   rot(from=anch[2],to=LEFT, p=move(-anch[1], reg[0][0]))
   : assert(false, str("Unsupported geometry:", geom[0]));


/// Check and compute the shift parameter for different object types
/// Arguments
///   ind = object index for error messages, either 1 or 2
///   type = object type
///   shift = given shift parameter