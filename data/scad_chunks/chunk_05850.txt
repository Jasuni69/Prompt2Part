function vector_nearest(query, k, target) =
    assert(is_int(k) && k>0)
    assert(is_vector(query), "\nQuery must be a vector.")
    let(
        tgpts  = is_matrix(target,undef,len(query)), // target is a point list
        tgtree = is_list(target)      // target is a tree
                 && (len(target)==2)
                 && is_matrix(target[0],undef,len(query))
                 && (len(target[1])==4 || (len(target[1])==1 && is_list(target[1][0])) )
    )
    assert( tgpts || tgtree, 
            "\nThe target should be a list of points or a search tree compatible with the query." )
    assert((tgpts && (k<=len(target))) || (tgtree && (k<=len(target[0]))), 
            "\nMore results are requested than the number of points.")
    tgpts
    ?   let( tree = _bt_tree(target, count(len(target))) )
        column(_bt_nearest( query, k, target,  tree),0)
    :   column(_bt_nearest( query, k, target[0], target[1]),0);


//Ball tree nearest