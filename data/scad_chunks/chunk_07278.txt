module Points(points=[[0,0]],color,size,hull,loop,start=0,mark,markS,markCol,face=true,center,help){
  center=is_undef(center)?is_num(points[0].z)?true:false:center;
  lp=assert(is_list(points),"no point(s) input")len(points);
  loop=is_undef(loop)?lp>25?lp:
                            lp:
                      loop;
  cMark=is_undef(markCol)?["Magenta","Chartreuse","Aqua","LightSkyBlue"]:markCol;
  size=is_undef(size)?$vpd/100:size;
  markS=is_undef(markS)?$vpd/40:markS;// scale marks 
  lenM=is_list(mark)?len(mark):0;
  
  if($preview){

    if(face&&lenM>2){
      color("Chartreuse",alpha=.5)
      polyhedron([for(i=[0:lenM-1])points[mark[i]]],[[for(i=[0:lenM-1])i]]);
      if(len(points[0])==3)for(i=[0:lenM-1]){
        p0=points[mark[i]];
        p1=points[mark[(i+1)%lenM]]-points[mark[i]];
        p2=points[mark[(i+2)%lenM]]-points[mark[i]];
        pNormal=cross(  p2, p1  );
//echo(i,norm(pNormal));
        translate((p0+points[mark[(i+1)%lenM]]+points[mark[(i+2)%lenM]])/3){
          color("Lime",0.8)hull(){
            translate(pNormal/norm(pNormal)*markS)sphere(minVal,$fn=3);
            sphere(d=markS/3,$fn=9);
          }
          color("HotPink",0.8)sphere(d=markS/2.9,$fn=9);
          }
      }
    }
     
    for (i=[0:is_list(points[0])?lp-1:0])translate(is_list(points[0])?points[i]:points){
     if(is_num(mark)&&i==mark){
      color("Chartreuse", alpha=.6)OctaH(.6*markS);
      color("Chartreuse", alpha=1)T(0,markS)linear_extrude(.01,convexity=3)text(str(points[i]),size=markS/3,halign="center");
      }
     if(is_list(mark)) for(j=[0:len(mark)-1])if(i==mark[j]){
      color(cMark[j%len(cMark)], alpha=0.4)OctaH(0.4*markS,$fn=12);
      if(face){
       // color("DarkGrey", alpha=1)rotate($vpr)T(0,markS*0.5)linear_extrude(.01,convexity=3)text(str(j),size=markS/4,halign="center");
        color("white", alpha=1)rotate($vpr)T(0,0,markS*0.5)linear_extrude(.01,convexity=3)text(str(j),size=markS/4,halign="center",valign="center");
     }
    }

     if(i>=start&&i<start+loop){
      if(i==start          )color("red",  alpha=.4)sphere(.25*markS,$fn=24);
      if(i==start +loop-1)color("Magenta", alpha=.4)sphere(.25*markS,$fn=24);

      if(!center)
        Color(is_undef(color[0])?1/(loop*1.1)*(i-start):color,is_undef(color[3])?.5:color[3])rotate($vpr){
      translate([0,i==lp-1?size *+2.5:size*1.25])linear_extrude(.01,convexity=3)text(str(i==lp-1?"end":"p",i),size=size,halign="center");
        rotate([-90,-45,45])cylinder(i==lp-1?size*3.5:size,0,size/5,$fn=3);
        }
      else Color(is_undef(color[0])?1/(loop*1.1)*(i-start):color,is_undef(color[3])?.5:color[3])rotate(vektorWinkel(points[i],[0,0,points[i].z])+[90,0,0]){
      translate(i==lp-1?[0,size *+3.5,size*3.5]:i==start+loop-1?[0,size*2.25,size*0.65]:[0,size*1.25,size*0.65])linear_extrude(.01,convexity=3)text(str(i==lp-1?"end":"p",i),size=size,valign="center",halign="center");
       rotate([i==start+loop-1?-45:-35,0,0])rotate(30)cylinder(i==lp-1?size*3.5:i==start+loop-1?size*1.5:size,0,size/5,$fn=3);
       }
    }}

     if(hull&&lp>2) if(len(points[0])==3)
        color(alpha=is_bool(hull)?.5: hull) hull() polyhedron(points, [[for(i=[0:len(points)-1]) i ]]);
        else if(len(points[0])==2)color(alpha=is_undef(color[3])?is_bool(hull)?.2:hull:color[3])polygon(points);

  }
  
  HelpTxt("Points",["points",[[1,2,3]],"color",color,"size",size,"hull",hull,"loop",loop,"start",start,"mark",mark,"markS",markS,"markCol",markCol,"face",face,"center",center],help);
  }

 //Points(Kreis(grad=120,fn=6),start=0,loop=6,mark=[2,3,4,12]);


/// Cutaway children for preview