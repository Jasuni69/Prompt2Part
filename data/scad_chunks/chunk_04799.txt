function pb_last(pts) = let(l=is_list(pts)? len(pts) : 0) l==0? [0,0] : pts[l-1];
//  function pb_subList(list, start, end)
//
//  Returns subset of list defined by start and end which are indexes to the list. Indexes are zero based.
//  When indexes are negative they refer from the end of the list rather than the start.
//  list    (list)      List of arbitrary data.
//  start   (number)    (default = 0)                index from the start where items need to be included in the returned list. Negative numbers represent an index from the end of the list.
//  end     (number)    (default = list length - 1)  index from the start after which items no longer need to be included. Negative numbers represent an index from the end of the list.
//  return  (list)      sub list of items from the input list. Items can appear reversed when end references an index that is less than the start index.
//
//  examples:
//      pb_subList([0,1,2,3,4,5,6])        => [0,1,2,3,4,5,6] //  copies the list
//      pb_subList([0,1,2,3,4,5,6],3)      => [3,4,5,6]       //  starts at index 3 up to the end
//      pb_subList([0,1,2,3,4,5,6],3, 4)   => [3,4]           //  starts at index 3 up to end index 4
//      pb_subList([0,1,2,3,4,5,6],3, 2)   => [3,2]           //  starts at index 3 down to end index 2
//      pb_subList([0,1,2,3,4,5,6],-2)     => [5,6]           //  starts 2 before the end of the list up to the end
//      pb_subList([0,1,2,3,4,5,6],-3, -4) => [4,3]           //  starts 3 before the end of the list down to 4 before the end of the list
//      pb_subList([0,1,2,3,4,5,6],-1, 0)  => [6,5,4,3,2,1,0] //  Reverse list