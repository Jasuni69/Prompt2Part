function webbing_r3(r1, r2, w, c) = 
  let(
    eps = 1e-9,
    x1 = 4*c*c*r1 + 4*c*c*r2 - 4*c*c*w - 4*r1*r1*r1 + 4*r1*r1*r2 + 4*r1*r2*r2 - 4*r2*r2*r2 ,
    x2 = sqrt(pow(-4*c*c*r1-4*c*c*r2+4*c*c*w+4*r1*r1*r1-4*r1*r1*r2-4*r1*r2*r2+4*r2*r2*r2,2) - 4*(4*r1*r1-8*r1*r2+4*r2*r2)*(c*c*c*c-2*c*c*r1*r1-2*c*c*r2*r2+c*c*w*w+pow(r1,4)-2*r1*r1*r2*r2+pow(r2,4))),
    x3 = 2*(4*r1*r1-8*r1*r2+4*r2*r2)
  )
  abs(r1 - r2) < eps ? // radii considered same below some threshold
    (w/2 > r1) ? 1/0 : // r3 = infinity to represent flat sides
    max(0,(c*c/4 + w*w/4 - r1*r1) / (2*r1 - w)) : // symmetrical case
    (((w/2 >= min(r1,r2)) ? // width larger than smaller diameter
      ((r2 > r1) ?
        max(0,(c*c + r1*r1 - r2*r2) / (2 * (r2 - r1))) : 
        max(0,(c*c - r1*r1 + r2*r2) / (2 * (r1 - r2)))
      ) :
      max(0, (x1 - x2) / x3) // general case
      )
    );

// Law of cosines, get angles based on knowing 3 sides of a non-right triangle