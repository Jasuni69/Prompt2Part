module leadnuthousing(type) { //! Nut housing, to connect a lead nut to another object
    vitamin(str("nuthousing(", type[0], "): ", type[1]));

    leadnut = leadnuthousing_nut(type);
    screw = leadnut_screw(leadnut);
    d = screw_radius(screw) * 2;
    p = metric_coarse_pitch(d);
    sl = leadnuthousing_nut_screw_length(type);
    ms = leadnuthousing_mount_screw(type);
    msl = leadnuthousing_mount_screw_len(type);
    md = screw_radius (ms) * 2;
    mp = metric_coarse_pitch(md);

    color("silver")
        difference() {
            cube([leadnuthousing_length(type), leadnuthousing_width(type), leadnuthousing_height(type)], center = true);
            translate([leadnuthousing_hole_pos(type),0,0]) {
                cylinder(d=leadnut_od(leadnut), h=leadnuthousing_length(type)+2, center=true);
                translate_z(leadnut_flange_offset(leadnut))
                    leadnut_screw_positions(leadnut)
                cylinder(r=screw_radius(leadnut_screw(leadnut)), h=sl+1);
            }

            rotate([0,90,0])
                leadnuthousing_screw_positions(type)
                    cylinder(r=screw_radius(ms), h=msl+1);

        }
    if(show_threads) {
        translate([leadnuthousing_hole_pos(type),0,leadnuthousing_height(type)/2 - sl/2 - leadnut_flange_t(leadnut)])
            leadnut_screw_positions(leadnut)
                female_metric_thread(d, p, sl, center = true, colour = silver);
        rotate([0,90,0])
            translate_z(msl/2)
                leadnuthousing_screw_positions(type)
                    female_metric_thread(md, mp, msl, center = true, colour = silver);
    }
}