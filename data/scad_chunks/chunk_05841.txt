function vector_axis(v1,v2=undef,v3=undef) =
    is_vector(v3)
    ?   assert(is_consistent([v3,v2,v1]), "\nBad arguments.")
        vector_axis(v1-v2, v3-v2)
    :   assert( is_undef(v3), "\nBad arguments.")
        is_undef(v2)
        ?   assert( is_list(v1), "\nBad arguments.")
            len(v1) == 2 
            ?   vector_axis(v1[0],v1[1]) 
            :   vector_axis(v1[0],v1[1],v1[2])
        :   assert( is_vector(v1,zero=false) && is_vector(v2,zero=false) && is_consistent([v1,v2])
                    , "\nBad arguments.")  
            let(
              eps = 1e-6,
              w1 = point3d(v1/norm(v1)),
              w2 = point3d(v2/norm(v2)),
              w3 = (norm(w1-w2) > eps && norm(w1+w2) > eps) ? w2 
                   : (norm(v_abs(w2)-UP) > eps)? UP 
                   : RIGHT
            ) unit(cross(w1,w3));


// Function: vector_bisect()
// Synopsis: Returns the vector that bisects two vectors.
// Topics: Vectors, Math
// See Also: unit(), v_theta(), vector_angle(), vector_axis()
// Usage:
//   newv = vector_bisect(v1,v2);
// Description:
//   Returns a unit vector that exactly bisects the minor angle between two given vectors.
//   If given two vectors that are directly opposed, returns `undef`.