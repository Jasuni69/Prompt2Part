module cube_character(head_size) {
    $fn = 48;
    
    module head() {
        half_head_size = head_size / 2;
        difference() {
            linear_extrude(head_size) 
                square(head_size, center = true);
            
            translate([0, -half_head_size, half_head_size])
            rotate([-90, 0, 0]) 
                connector_peg(peg_radius, spacing = spacing, void = true);         
        }            
    }
    
    module body() {
        body_size = head_size * 0.75;
        half_body_size = body_size / 2;
        
        module peg_void() {
            translate([half_body_size + 1, head_size * 0.2, half_body_size])
            rotate([0, -90, 0]) 
                connector_peg(peg_radius, spacing = spacing, void = true);   
        }
        
        difference() {
             linear_extrude(body_size) 
             union() {
                square(body_size, center = true);
                // feet
                translate([0, -head_size * 0.4, 0]) 
                difference() {
                    square(head_size * 0.65, center = true);
                    square([head_size * 0.05, head_size * 0.65], center = true);
                }
            }                        
                
            // holes
            translate([0, half_body_size + 1, half_body_size])
            rotate([90, 0, 0]) 
                connector_peg(peg_radius, spacing = spacing, void = true);   
                    
            peg_void();   
            mirror([1, 0, 0]) peg_void();                               
        }
         
        // hands
        hand_size = [head_size * 0.275, head_size * 0.625];
        hand_offsetx = body_size + 2;
        
        module hand() {
             translate([half_body_size / 2, 0, 0]) 
             rotate([0, -90, 0]) 
             translate([hand_size[0] / 2, 0, 0]) {
                linear_extrude(half_body_size)
                    square(hand_size, center = true);
                    
                translate([head_size * 0.1375, head_size * 0.1375, half_body_size / 2]) 
                rotate([0, 90, 0]) 
                    connector_peg(peg_radius, spacing = spacing);   
            }
        }
                 
        translate([-body_size, 0]) hand();
        translate([body_size, 0]) hand();    
    }
    
   head();
    
   translate([0, -head_size, 0]) 
        body();
        
    translate([0, head_size * 0.75]) 
        connector_peg(peg_radius, spacing = spacing, ends = true);   
}

// refactored from https://www.thingiverse.com/thing:258542