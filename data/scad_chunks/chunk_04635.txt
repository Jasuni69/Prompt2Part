module beamChainExample(){
  function beamPoints(r1,r2,rStart=0,rEnd=0)=[[0,0,rStart],[2,8,0],[5,4,r1],[15,10,r2],[17,2,rEnd]];

  // chained lines by themselves
  translate([0,0,0]){
    radiiPoints=beamPoints(0,0);
    for(i=[0: len(radiiPoints)-1]){color("red")translate([radiiPoints[i].x,radiiPoints[i].y,0])cylinder(d=0.2, h=1);}
    linear_extrude(1)polygon(polyRound(beamChain(radiiPoints,offset1=0.02, offset2=-0.02),20));
  }
  

  // Add some radii to the line transitions
  translate([0,-7,0]){
    radiiPoints=beamPoints(2,1);
    for(i=[0: len(radiiPoints)-1]){color("red")translate([radiiPoints[i].x,radiiPoints[i].y,0])cylinder(d=0.2, h=1);}
    linear_extrude(1)polygon(polyRound(beamChain(radiiPoints,offset1=0.02, offset2=-0.02),20));
  }
  
  // Give make the lines beams with some thickness
  translate([0,-7*2,0]){
    radiiPoints=beamPoints(2,1);
    linear_extrude(1)polygon(polyRound(beamChain(radiiPoints,offset1=0.5, offset2=-0.5),20));
  }

  // Add an angle to the start of the beam
  translate([0,-7*3,0]){
    radiiPoints=beamPoints(2,1);
    linear_extrude(1)polygon(polyRound(beamChain(radiiPoints,offset1=0.5, offset2=-0.5, startAngle=45),20));
  }

  // Put a negative radius at the start for transationing to a flat surface
  translate([0,-7*4,0]){
    radiiPoints=beamPoints(2,1,rStart=-0.7);
    linear_extrude(1)polygon(polyRound(beamChain(radiiPoints,offset1=0.5, offset2=-0.5, startAngle=45),20));
  }

  // Define more points for a polygon to be atteched to the end of the beam chain
  clipP=[[16,1.2,0],[16,0,0],[16.5,0,0],[16.5,1,0.2],[17.5,1,0.2],[17.5,0,0],[18,0,0],[18,1.2,0]];
  translate([-15,-7*5+3,0]){
    for(i=[0:len(clipP)-1]){color("red")translate([clipP[i].x,clipP[i].y,0])cylinder(d=0.2, h=1);}
    linear_extrude(1)polygon(polyRound(clipP,20));
  }

  // Attached to the end of the beam chain by dividing the beam paths in forward and return and
  // concat other polygon inbetween
  translate([0,-7*6,0]){
    radiiPoints=beamPoints(2,1);
    forwardPath=beamChain(radiiPoints,offset1=0.5,startAngle=-15,mode=2);
    returnPath=revList(beamChain(radiiPoints,offset1=-0.5,startAngle=-15,mode=2));
    entirePath=concat(forwardPath,clipP,returnPath);
    linear_extrude(1)polygon(polyRound(entirePath,20));
  }

  // Add transitioning radii into the end polygong
  translate([0,-7*7-2,0]){
    radiiPoints=beamPoints(2,1,rEnd=3);
    forwardPath=beamChain(radiiPoints,offset1=0.5,startAngle=-15,mode=2);
    returnPath=revList(beamChain(radiiPoints,offset1=-0.5,startAngle=-15,mode=2));
    entirePath=concat(forwardPath,clipP,returnPath);
    linear_extrude(1)polygon(polyRound(entirePath,20));
  }

  // Define multiple shells from the the one set of points
  translate([0,-7*9,0]){
    radiiPoints=beamPoints(2,1,rEnd=3);
    for(i=[0:2]){linear_extrude(1)polygon(polyRound(beamChain(radiiPoints,offset1=-1+i*0.4, offset2=-1+i*0.4+0.25),20));}
  }
}