function sq (size=[10,10],fn=[10,10],diff=0,t=[0,0,0],z,center=true)=
  let (
    center=is_list(center)?center:is_bool(center)?center?[0,0]:[1,1]:[center,center],
    x=is_list(size)?size[0]:size,
    y=is_list(size)?size[1]:size,
    fnx=max(1,is_list(fn)?fn[0]:fn),
    fny=max(1,is_list(fn)?fn[1]:fn),
    diff=is_list(diff)?diff:[diff,diff,diff,diff],
    t=[center.x?size.x/2*center.x:0,center.y?size.x/2*center.y:0]+v3(t),
    points=is_undef(z)?[
    for(i=[0:fnx-1])[-x/2+x/fnx*i,-y/2+i%2*-diff[0]]+t,
    for(i=[0:fny-1])[x/2+i%2*diff[1],-y/2+y/fny*i]+t,
    for(i=[0:fnx-1])[x/2-x/fnx*i,y/2+i%2*diff[2]]+t,
    for(i=[0:fny-1])[-x/2-i%2*diff[3],y/2-y/fny*i]+t
    ]:
    [
    for(i=[0:fnx-1])[-x/2+x/fnx*i,    -y/2+i%2*-diff[0],z]+v3(t),
    for(i=[0:fny-1])[x/2+i%2*diff[1], -y/2+y/fny*i,     z]+v3(t),
    for(i=[0:fnx-1])[x/2-x/fnx*i,      y/2+i%2*diff[2], z]+v3(t),
    for(i=[0:fny-1])[-x/2-i%2*diff[3], y/2-y/fny*i,     z]+v3(t)
    ]
  )
  points;
  
  //  polygon(sq(center=1,diff=5));


  
/** \name bend \page functions
bend() bends points (use2D/3D) around z
\example polygon( bend(sq( center=[1,0], t=[ 5, 0 ] )) );
\param points points to bend
\param r fix bend radius calculation 0 for dynamic
\param t translation vector for distance from bend center
\param rev  reverse bend direction (convex concav)
*/

/*
polygon( bend(sq( center=[1,0]), t=[10,0]) );
T(-10)circle(10-.1);
// */