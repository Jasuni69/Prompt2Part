module ball_bearing(type) { //! Draw a ball bearing
    shield = bb_colour(type);
    suffix = shield == "silver" ? "ZZ " : "-2RS ";
    vitamin(str("ball_bearing(BB", bb_name(type), "): Ball bearing ", bb_name(type), suffix, bb_bore(type), "mm x ", bb_diameter(type), "mm x ", bb_width(type), "mm"));
    rim = bb_rim(type);
    hub = bb_hub(type);
    h = bb_width(type);
    or = bb_diameter(type) / 2;
    ir = bb_bore(type) / 2;
    fr = bb_flange_diameter(type) / 2;
    fw = bb_flange_width(type);

    color("silver") {
        $fa = fa; $fa = fs;

        rotate_extrude()
            hull() {
                chamfer = rim / 6;
                translate([or - rim, -h / 2 + chamfer])
                    square([rim, h - 2 * chamfer]);

                translate([or - rim, -h / 2])
                    square([rim - chamfer, h]);
            }

        if (fr)
            rotate_extrude()
                hull() {
                    chamfer = fw / 6;
                    translate([or - rim, -h / 2 + chamfer])
                        square([fr - or + rim, fw - 2 * chamfer]);

                    translate([or - rim,  -h / 2])
                        square([fr - or + rim - chamfer, fw]);
                }

        rotate_extrude()
            hull() {
                chamfer = hub / 6;
                translate([ir, -h / 2 + chamfer])
                    square([hub, h - 2 * chamfer]);

                translate([ir + chamfer, -h / 2])
                    square([hub - chamfer, h]);
            }
    }

    color(shield) tube(or - rim - eps, ir + hub + eps, h - (h < 5 ? 0.5 : 1));

    if($children)
        translate_z(bb_width(type) / 2)
            children();
}