module dragon_and_perl() {
    function __angy_angz(p1, p2) = 
        let(v = p2 - p1) 
        [
            atan2(v.z, norm([v.x, v.y])), 
            atan2(v.y, v.x)
        ];
        
    body_path = bezier_curve(0.02, [
        [0, 7.5, 15],
        [0, 30, 0],
        [-30, 50, -55],
        [-50, 70, 0],
        [20, 90, 60],
        [50, 110, 0],
        [0, 130, -30],
        [-10, 150, 0],
        [-5, 170, 0]
    ]);
    leng_body_path = len(body_path);
    angy_angz = __angy_angz(body_path[0], body_path[1]);

    translate([-.4, 10, 13.5])
    rotate([-138, -4, 8])
    rotate([0, angy_angz[0], angy_angz[1]])
    scale(1.1)
        dragon_head();

    body_r = 6;
    body_fn = 12;
    scale_fn = 4;
    scale_tilt_a = 6;
    one_body_scale_data = one_body_scale(body_r, body_fn, scale_fn, scale_tilt_a);

    along_with(body_path, scale = [0.25, 0.25, 0.5], method = "EULER_ANGLE")    
        one_segment(body_r, body_fn, one_body_scale_data);

    ayz = __angy_angz(body_path[leng_body_path - 2], body_path[leng_body_path - 1]);

    translate(body_path[leng_body_path - 1])
    rotate([0, ayz[0] + 82, ayz[1]])
    mirror([0, 0, 1])
    rotate(-12)
    scale([0.3, 0.3, 0.6])
        tail();

    translate([-5, 25, -12.5]) 
    rotate([-20, 0, -15]) 
        foot();

    translate([-10, 15, -6.5]) 
    rotate([-60, 45, 25]) 
    mirror([1, 0, 0])
        foot();

    translate([11.5, 107, -.5]) 
    rotate([-10, 20, -50]) 
    scale(0.65)
        foot();

    translate([7, 108, .25]) 
    rotate([5, 20, 60]) 
    rotate([10, -30, 0]) 
    scale(0.65)
    mirror([1, 0, 0])
        foot();

    translate([-27.5, 11.75, -14])
        polyhedron_hull(fibonacci_lattice(66, 7));
}