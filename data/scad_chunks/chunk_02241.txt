module camera_back(cam) { //! Make the STL for a camera case back
    pcb = camera_pcb(cam);
    back = cam_back_size(cam);
    screw = pcb_screw(pcb);
    nut = screw_nut(screw);

    stl(str("camera_back_", cam[0]))
        translate_z(back.z)
            hflip()
                difference() {
                    translate_z(back.z / 2)
                        cube(back, center = true);

                    translate([0, -cam_back_overlap])
                        cube([pcb_length(pcb) - 2 * cam_back_overlap, pcb_width(pcb), 2 * cam_back_clearance], center = true);

                    translate([0, -pcb_width(pcb) / 2])
                        cube([connector_size.x + 2 * clearance, 2 * connector_size.y + 1, 2 * round_to_layer(connector_size.z + clearance)], center = true);

                    translate_z(back.z)
                        cam_holes(cam)
                            hflip()
                                nut_trap(screw, nut, supported = true);
                }
}