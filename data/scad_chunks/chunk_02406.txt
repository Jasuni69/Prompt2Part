module fan_duct_stl() {
    module frame(z, offset, y = -fan_pos.y)
        translate([0, y, z])
            linear_extrude(height = eps)
                offset(offset)
                    fan_shape();

    z = height + top_thickness - fan_pos.z + fan_depth(fan) / 2 - fan_socket;

    translate([0, -fan_pos.y, z])
        linear_extrude(height = fan_socket)
            difference() {
                fan_shape();

                round(1)
                    offset(-fan_duct_t)
                        fan_shape();
            }

    stl("fan_duct") union() {
        difference() {
            hull() {
                frame(z, 0);

                frame(fan_depth(fan), fan_duct_t + foam_t, 0);
            }
            hull() {
                frame(z, -fan_duct_t);

                frame(fan_depth(fan), foam_t -extrusion_width / 2, 0);
            }
        }

        linear_extrude(height = fan_depth(fan))
            difference() {
                offset(fan_duct_t + foam_t)
                    fan_shape();

                offset(foam_t)
                    fan_shape();
            }
    }
}