module test_list_set() {
    assert_equal(list_set([2,3,4,5], 2, 21), [2,3,21,5]);
    assert_equal(list_set([2,3,4,5], [1,3], [81,47]), [2,81,4,47]);
    assert_equal(list_set([2,3,4,5], [2], [21]), [2,3,21,5]);
    assert_equal(list_set([1,2,3], [], []), [1,2,3]);
    assert_equal(list_set([1,2,3], [1,5], [4,4]), [1,4,3,0,0,4]);
    assert_equal(list_set([1,2,3], [1,5], [4,4],dflt=12), [1,4,3,12,12,4]);
    assert_equal(list_set([1,2,3], [1,2], [4,4],dflt=12, minlen=5), [1,4,4,12,12]);
    assert_equal(list_set([1,2,3], 1, 4, dflt=12, minlen=5), [1,4,3,12,12]);
    assert_equal(list_set([1,2,3], [],[],dflt=12, minlen=5), [1,2,3,12,12]);
    assert_equal(list_set([1,2,3], 5,9), [1,2,3,0,0,9]);
    assert_equal(list_set([1,2,3], 5,9,minlen=4), [1,2,3,0,0,9]);
    assert_equal(list_set([1,2,3], 5,9,minlen=7), [1,2,3,0,0,9,0]);
    assert_equal(list_set([1,2,3], 5,9,dflt=12), [1,2,3,12,12,9]);
    assert_equal(list_set([1,2,3], -1,12), [1,2,12]);
    assert_equal(list_set([1,2,3], -1,12,minlen=5), [1,2,12,0,0]);
    assert_equal(list_set([1,2,3], [-2,5], [8,9]), [1,8,3,0,0,9]);
    assert_equal(list_set([1,2,3], [-2,5], [8,9],minlen=8,dflt=-1), [1,8,3,-1,-1,9,-1,-1]);
    assert_equal(list_set([1,2,3], [-2,5], [8,9],minlen=3,dflt=-1), [1,8,3,-1,-1,9]);
    assert_equal(list_set([1,2,3], [0],[4], minlen=5), [4,2,3,0,0]);
    assert_equal(list_set([], 2,3), [0,0,3]);
    assert_equal(list_set([], 2,3,minlen=5,dflt=1), [1,1,3,1,1]);
}
test_list_set();