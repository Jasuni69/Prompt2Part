module sliding_ball_t_nut(size, w, h, r) { //! Draw a sliding ball t nut
    rad = 0.5;
    stem = size.z - h;
    ball_d = 4;
    offset = 12;

    module shape()
        rotate([90, 0, 90])
            translate_z(-offset)
                linear_extrude(size.x) {
                    hull() {
                        translate([0, h - size.y / 2])
                            semi_circle(d = size.y);

                        for(side = [-1, 1])
                            translate([side * (w / 2 - rad), rad])
                                circle(rad);
                    }
                    rounded_square([size.y, stem * 2], rad / 2, true);
                }

    render() difference() {
        shape();

        cylinder(r = r, h = 100, center = true);
    }

    translate([-offset + ball_d, 0, h - 0.4])
        sphere(d = ball_d);

    if(show_threads)
        render() intersection() {
            translate_z(-stem)
                female_metric_thread(2 * r, metric_coarse_pitch(2 * r), size.z - 2, center = false);

            shape();
        }
}