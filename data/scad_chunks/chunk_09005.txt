function _adjustNeighborsDtri(d, newTriangles, leng, _indices_hash, i = 0) =
    i == leng ? d :
    let(
		edge = newTriangles[i][1],
		delaunayTri = newTriangles[i][2],
		rd = is_undef(delaunayTri) ? d : 
				(
					let(
						neighbors = hashmap_get(delaunay_triangles(d), delaunayTri, hash = _indices_hash),
						leng_nbrs = len(neighbors),
						nbri = find_index(neighbors, function(nbr) contains(nbr, edge[1]) && contains(nbr, edge[0])),
						nd = nbri == -1 ? d : updateNbrs(d, delaunayTri, [
							for(j = 0; j < leng_nbrs; j = j + 1)
								j == nbri ? newTriangles[i][0] : neighbors[j]
						], _indices_hash)
					)
					nd
				)
	)
    _adjustNeighborsDtri(rd, newTriangles, leng, _indices_hash, i + 1);