module remove(from,step1=UNITY,step2=UNITY,step3=UNITY,step4=UNITY,step5=UNITY
        ,step6=UNITY,step7=UNITY,step8=UNITY,step9=UNITY,step10=UNITY
        ,step11=UNITY,step12=UNITY,step13=UNITY,step14=UNITY,step15=UNITY
        ,step16=UNITY,step17=UNITY,step18=UNITY,step19=UNITY,step20=UNITY
        ,name="",geom,add)
{

//////////////
p=[(isPlaceOrGeom(from)?from:UNITY),step1,step2,step3,step4,step5
			 ,step6,step7,step8,step9,step10
			 ,step11,step12,step13,step14,step15
			 ,step16,step17,step18,step19,step20];

fromPart = ( from == undef || isPlaceOrGeom(from))?currentPart():from;

place=placesOnly(p);


$geomInfo= geomsOnly(p,geom);

$placement=multAll(place);
$placementStack=concat($placementStack, [[name,$placement]]);
$placementStackTop=$placementStackTop+1;

if( currentPartIn (add,currentPartAdd()))
    addOnly()     multmatrix($placement)
  {
    $placement=UNITY;
    children();
  }

if(  currentPartIn(fromPart,currentPartRemove()))
    removeOnly()     multmatrix($placement)
  {
    $placement=UNITY;
    children();
  }
}
//CONSTRUCTIVE.SCAD
//This is a part of:
//CONSTRUCTIVE LIBRARY by PPROJ (version from 05.06.2021)
//released under dual-licensed under GPL 2.0  or CERN-OHL-W.*You can choose between one of them if you use this work..

//you only need a single file: constructive-compiled.scad which
//contains all the partial files you find. you can ignore everything else..
//just include it in your code by:
//include <constructive-compiled.scad>

//if you wish to improve the library or make changes to it,
// it might be handier to use:
//include <constructive-all.scad> instead. so you do not have to recreate constructive-compiled.scad from the parts
//every time you make a change to a part of the library