function smooth_path(path, tangents, size, relsize, method="edges", splinesteps=10, uniform, closed) =
is_1region(path)
    ? smooth_path(path[0], tangents, size, relsize, method, splinesteps, uniform, default(closed,true))
    : assert(method=="edges" || method=="corners", "method must be \"edges\" or \"corners\".")
assert(method=="edges" || (is_undef(tangents) && is_undef(uniform)), "The tangents and uniform parameters are incompatible with method=\"corners\".")
let (
    uniform = default(uniform,false),
    bez = method=="edges"
        ? path_to_bezpath(path, tangents=tangents, size=size, relsize=relsize, uniform=uniform, closed=default(closed,false))
        : path_to_bezcornerpath(path, size=size, relsize=relsize, closed=default(closed,false)),
    smoothed = bezpath_curve(bez,splinesteps=splinesteps)
)
closed ? list_unwrap(smoothed) : smoothed;