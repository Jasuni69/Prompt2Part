module Voronoi(size=[50,50],dicke=0.3,grid=[2,3],of=.7,seed=5566,center=false,repeat=true,help){


repeat=is_list(repeat)?repeat:[repeat,repeat];
size=assert(size, "Voronoi needs a size")is_list(size)?size:[size,size];
grid=is_list(grid)?[ceil(grid.x),ceil(grid.y)]:[ceil(grid),ceil(grid)];
center=is_list(center)?bool(center,false):center?[0,0]:[1,1];

HelpTxt("Voronoi",["size",size,"dicke",dicke,"grid",grid,"of",of,"seed",seed,"center",center,"repeat",repeat],help);

offset=assert(is_num(size.x)&&is_num(size.y),"Voronoi size contain nan")[size.x/grid.x/2,size.y/grid.y/2]*of;

points=[
for(y=[0:grid.y])[for (x=[0:grid.x])
  let(rand=rands(-1,1,2,seed+(repeat.x&&x==grid.x?0:x)+(repeat.y&&y==grid.y?0:y)*grid.x))[
size.x/grid.x*x + offset.x*rand[0],
size.y/grid.y*y + offset.y*rand[1]
]]
];

//clamping cell values