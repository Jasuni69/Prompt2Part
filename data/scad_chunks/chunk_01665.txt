module blower_square(type) { //! Draw a square blower
    width = blower_width(type);
    depth = blower_depth(type);
    wall_left = blower_wall_left(type);
    wall_right = blower_wall_right(type);
    hole_count = len(blower_screw_holes(type));
    hole_pitch = (blower_screw_holes(type)[1].x - blower_screw_holes(type)[0].x) / 2;
    corner_radius = width / 2 - hole_pitch;
    corner_inset = (width - blower_exit(type) - wall_left - wall_right) / (hole_count == 2 ? 1 : 2);

    module inset_corners()
        translate([width / 2, width / 2])
            for(i = hole_count == 2 ? [1, 3] : [0 : 3])
                rotate(i * 90)
                    translate([-width / 2 - eps, -width/ 2 - eps])
                        quadrant(corner_inset, corner_inset - corner_radius);

    module square_inset_corners(remove_center = false)
        difference() {
            //overall outside
            rounded_square([width, width], corner_radius, center = false);

            if (remove_center) {
                // cut out the inside, leaving the corners
                translate([hole_count == 2 ? wall_left : corner_inset + wall_left, -eps])
                    square([blower_exit(type), width / 2], center = false);

                translate(blower_axis(type))
                    circle(d = blower_bore(type) + 1);
            } else {
                // cut out the bore for the fan
                translate(blower_axis(type))
                    circle(d = blower_bore(type));
            }
            inset_corners();
        }

    base_height = blower_base(type);
    linear_extrude(base_height)
        difference () {
            rounded_square([width, width], corner_radius, center = false);
            blower_hole_positions(type)
                circle(d = blower_screw_hole(type));
        }

    // add the lugs which may be higher than the base
    linear_extrude(blower_lug(type))
        difference () {
            intersection() {
                rounded_square([width, width], corner_radius, center = false);
                inset_corners();
            }
            blower_hole_positions(type)
                circle(d = blower_screw_hole(type));
        }

    translate_z(base_height)
        linear_extrude(depth - base_height)
            square_inset_corners(remove_center = true);

    translate_z(depth - base_height)
        linear_extrude(blower_top(type))
            square_inset_corners();
}