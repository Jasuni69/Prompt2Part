module tubing(type, length = 15, forced_id = 0, center = true, path = []) { //! Draw specified tubing with optional forced internal diameter and optional path.
    original_od = tubing_od(type);
    original_id = tubing_id(type);
    id = forced_id ? forced_id : original_id;
    od = original_od + id - original_id;
    length = path ? round(path_length(path)) : length;
    if(tubing_material(type) == "Heatshrink sleeving")
        vitamin(str("tubing(", type[0], arg(length, 15), "): ", tubing_material(type), " ID ", original_id, "mm x ",length, "mm"));
    else
        vitamin(str("tubing(", type[0], arg(length, 15), "): ", tubing_material(type), " OD ", original_od, "mm ID ", original_id,"mm x ",length, "mm"));

    if(tubing_material(type) == "Carbon fiber")
        woven_tube(od / 2, id /2, center = center, length, colour = tubing_colour(type));
    else
        color(tubing_colour(type))
            if(path)
                render_if(manifold)
                    difference() {
                        sweep(path, circle_points(od / 2));
                        start = path[0] - eps * unit(path[1] - path[0]);
                        n = len(path) - 1;
                        end = path[n] + eps * unit(path[n] - path[n - 1]);
                        sweep(concat([start], path, [end]), circle_points(id / 2));
                    }
            else
                linear_extrude(length, center = center, convexity = 4)
                    difference() {
                        circle(d = od);
                        circle(d = id);
                    }
}