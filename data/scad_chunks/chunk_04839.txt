function _pb_line(pts=[], rel=false, args=[], angle, move=false, _i=0, _g, _r=[]) = let(
    _l = _r==[]? pts==[]? [0,0] : pb_last(pts) : pb_last(_r),
    _g = _g==undef? pb_groupsOf(2,args)[1] : _g,
    np = rel? _l+_g[_i] : _g[_i],
    _r = np==_l&&pts!=[]&&_r!=[]? _r : concat(_r, [np])
    ) _i>=len(_g)-1? [_r,move?[[0,0,0]]:[],move? angle: pb_calcExitAngle(concat([_l],_r),angle),[[],[]]] : _pb_line(pts, rel, args, angle, move, _i+1, _g, _r);

//  module l
//
//  Adds one or multiple points relative from the last point
//  x       (list)    Flat list of numbers. Numbers are x,y value pairs. Should have 1 .. n value pairs or...
//  x       (number)  x value for the next point.
//  y       (number)  y value for the next point.