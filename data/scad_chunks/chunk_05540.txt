function f_3arg(target_func) =
    function(a,b,c)
        a==undef && b==undef && c==undef? function(x,y,z) target_func(x,y,z) :
        a==undef && b==undef? function(x,y) target_func(x,y,c) :
        a==undef && c==undef? function(x,y) target_func(x,b,y) :
        b==undef && c==undef? function(x,y) target_func(a,x,y) :
        a==undef? function(x) target_func(x,b,c) :
        b==undef? function(x) target_func(a,x,c) :
        c==undef? function(x) target_func(a,b,x) :
        function() target_func(a,b,c);


// Function: ival()
// Synopsis: Generates a function with signature `(i,x)` that calls `func(i)`
// Topics: Function Literals
// See Also: f_1arg(), f_2arg(), f_3arg(), ival(), xval()
// Usage:
//   newfunc = ival(func);
// Description:
//   Wraps a single-argument function literal so that it can take two arguments,
//   passing the first argument along to the wrapped function.
// Arguments:
//   target_func = The function of signature (x) to wrap.
// FunctionLiteral Args:
//   a = The argument that will be passed through.
//   b = The argumen that will be discarded.
// Example:
//   x = while(0, ival(f_lt(5)), xval(f_add(1)));