module VQRotor(size=15,h=50,transH=5,twist=200,d=2.2,star=false,fnz,minR=.3,transR,name,help){

transH=is_num(transH)?transH*[1,1]:transH;
transR=vMin(is_undef(transR)?[size/2/sqrt(2),size/2/sqrt(2)]:is_num(transR)?[1,1]*transR:transR, size/2/sqrt(2));


fnz=is_undef(fnz)?ceil(h/fs):fnz;
delta=[floor(fnz/h*transH[0]),floor(fnz/h*transH[1])];// transition zone
star=star?is_num(star)?star:floor(d*PI):0;

vP=concat(
[for(z=[0:fnz-delta[0]]) each mPoints(vorterantQ(size=size,r=minR+(transR[0]-minR)*transition(z,delta[0]),z=z*h/fnz,fn2=50),r=z*twist/(fnz-vSum(delta))) ],
[for(z=[fnz-delta[0]+1:fnz]) each mPoints(vorterantQ(size=size,r=minR+(transR[1]-minR)*transition(fnz-z,delta[1]),z=z*h/fnz,fn2=50),r=z*twist/(fnz-vSum(delta))) ]
);

  difference(){
    PolyH(vP,loop=50*4,flip=false,name=0);
    if(d)Loch(h,.25,d=d,rad=.5,name=0);
    if(star)linear_extrude(h*3,convexity=5,center=true)Star(star,r1=d/2-.5,r2=d/2+.5,grad=90/star,grad2=45/star);
  }
  
  HelpTxt("VQRotor",["size",size,"h",h,"transH",transH,"twist",twist,"d",d,"star",star,"fnz",fnz,"minR",minR],help);
  InfoTxt("VQRotor",concat(["diameter",size+(2-sqrt(8))*minR],star?["star",star]:[],["transH",delta*h/fnz]),name);
}











/** \name Bellow
\brief Bellow() creates a bellow segment
\param size size 
\param delta  change (list for fn=4)
\param flat  height of flat sections
\param fn shape
\param deg  for fn!=4
\param help help
*/

//
//Bellow(delta=0,deg=90/6,fn=6);
//Bellow(delta=[1,-1],flat=[.5,.25],fn=4);