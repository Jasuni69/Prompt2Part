function _getnormal(polygon,index,u,smooth_normals) =
  let(
      flat = smooth_normals ? 1/8 : 1, // Normals are interpolated between faces.  The middle frac portion of each face gets the true face normal
                                       // and then interpolation starts at the end of the flat region.  With flat=1 only endpoints are interpolated.
      edge = (1-flat)/2,
      L=len(polygon),
      next_ind = posmod(index+1,L),
      prev_ind = posmod(index-1,L),
      this_normal = line_normal(select(polygon,index,index+1))
  )
    u >= 1-edge ? lerp(this_normal,line_normal(select(polygon,index+1,index+2)), edge==0? 0.5 : (u-edge-flat)/edge/2)
  : u <= edge ? lerp(line_normal(select(polygon,index-1,index)),this_normal, edge==0? 0.5 : 0.5+u/edge/2)
  : this_normal;


// Start at segment ind, position u on the polygon and find a point length units
// from that starting point.  If dir<0 goes backward through polygon segments
// and if dir>0 goes forward through polygon segments.
// Returns [ point, ind, u] where point is the actual point desired.