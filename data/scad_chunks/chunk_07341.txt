module SQ(size=[10,10],fn=[10,2],diff=[0.0001,0.0001,0.0001,0.0001],center=true,help){
    
    x=is_list(size)?size[0]:size;
    y=is_list(size)?size[1]:size;
    fnx=is_list(fn)?fn[0]:fn;
    fny=is_list(fn)?fn[1]:fn;
    diff=is_list(diff)?diff:[diff,diff,diff,diff];
    center=b(is_list(center)?center:[center,center],false);
    
    points=[
    for(i=[0:fnx])[-x/2+x/fnx*i,-y/2+i%2*-diff[0]],
    for(i=[0:fny])[x/2+i%2*diff[1],-y/2+y/fny*i],    
    for(i=[0:fnx])[x/2-x/fnx*i,y/2+i%2*diff[2]],
    for(i=[0:fny])[-x/2-i%2*diff[3],y/2-y/fny*i],

    ] ;
    
   // echo(points);
    path=[[for(i=[0:len(points)-1])i]];
    //echo (path);
   translate([-x/2*center.x,-y/2*center.y]+[x/2,y/2]) polygon(points,path);
    
   
 if($info) echo("instead SQ for twisted extrusions use linear_extrude(segments=20)");
HelpTxt("SQ",["size",[x,y],"fn",[fnx,fny],"diff",diff,"center",center] ,help);   
}

/*
union(){ // Gear TEST
    z=6;
rot=+0.5;

Cycloid(linear=+2,option=+0);
T(rot*PI*z-PI/4,z/2)rotate(-rot*360-90)Cycloid(option=+0,z=z,l=+0.00,d=1);
}
// */
/**
\name Cycloid
\page Polygon
Cycloid() creates a cycloid

\param modul cycloid circle size
\param z number of teeth (Ã—2 revolutions)
\param fn fragments per teeth
\param option  -1,0,1  hyp hybrid epi 
\param l reduce height without changing base radius
\param delta contracted or extended cycloid  
\param d  circle for cener hole or generate inside teeth
\param fnd fraqments for d
\param linear  rack
\param name help name help
*/

//Cycloid(delta=0,linear=false);
//Cycloid(delta=-0.15,option=-1,linear=true);