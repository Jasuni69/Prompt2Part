module square_button(type, colour = "yellow", right_angle = false) { //! Draw square button with specified cap colour if it has a cap
    w = square_button_width(type);
    flange_d = square_button_cap_flange_d(type);
    vitamin(str("square_button(", type[0], flange_d ? str(", \"", colour, "\"") : "", "): Square button ", w, "mm",
        flange_d ? str(" with ", colour, " cap") : ""));
    h = square_button_height(type);
    wall = square_button_wall(type);
    rivit = square_button_rivit(type);
    pitch = (w/ 2 - wall - rivit * 0.75);
    stem = square_button_cap_stem(type);
    ra_z = square_button_ra_z(type);

    $fa = fa; $fs = fs;

    translate(right_angle ? [0, 0, ra_z] : [0, 0])
        rotate([right_angle ? -90 : 0, 0, 0]) {
        color(grey(20)) {
            rounded_rectangle([w, w, h - 0.5], r = wall);

            for(x = [-1, 1], y = [-1, 1])
                translate([x * pitch, y * pitch])
                    cylinder(d = rivit, h = h);

            d =  square_button_d(type);
            bh = square_button_h(type) - h + 0.5;
            translate_z(h - 0.5)
                cylinder(d1 = d, d2 = bh > 1.5 ? d - 0.5 : d, h = bh);
        }

        color("silver")
            translate_z(h - 0.5)
                rounded_rectangle([w - 2 * wall, w - 2 * wall, 0.2], r = wall, center = true);

        if(flange_d)
            translate_z(square_button_h(type))
                color(colour) rotate_extrude() {
                    square([square_button_d(type) / 2, stem]);

                    translate([0, stem]) {
                        square([flange_d / 2, square_button_cap_flange_h(type)]);

                        rounded_corner(r = square_button_cap_d(type) / 2, h = square_button_cap_h(type) - stem, r2 = 0.5);
                    }
                }
    }
}