module socket_box(type) { //! Generate STL of the backbox for the specified socket

    screw = mains_socket_screw(type);
    screw_clearance_radius = screw_clearance_radius(screw);

    insert = screw_insert(screw);
    insert_length = insert_length(insert);
    insert_boss = mains_socket_insert_boss(type);
    insert_hole_radius = insert_hole_radius(insert);

    stl(str("socket_box_",type[0]))
        difference() {
            linear_extrude(height, convexity = 5)
                face_plate(type);

            difference() {
                translate_z(base_thickness)
                    linear_extrude(height, convexity = 5)
                         offset(-wall) offset(1) face_plate(type);

                for(side = [-1, 1])
                    hull()
                        for(x = [1, 2])
                            translate([side * mains_socket_pitch(type) / x, 0])
                                cylinder(d = insert_boss, h = 100);
            }
            //
            // Socket holes
            //
            translate_z(height)
                mains_socket_hole_positions(type) {
                    poly_cylinder(r = screw_clearance_radius, h = 2 * box_height, center = true);

                    poly_cylinder(r = insert_hole_radius, h = 2 * insert_length, center = true);
                }
            //
            // Cable hole
            //
            translate([cable_x, cable_y(type), cable_z])
                rotate([90, 0, 0])
                    teardrop_plus(r = cable_d / 2, h = 30);
        }
}