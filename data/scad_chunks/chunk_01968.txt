module knob(type, supports = true) { //! Generate the STL for a knob
    r_top = knob_top_d(type) / 2;
    r_bot = knob_bot_d(type) / 2;
    h = knob_height(type);
    r = knob_corner_r(type);
    screw = knob_screw(type);
    sr = knob_shaft_d(type) / 2 + (screw ? clearance : 0);
    top_wall = h - knob_shaft_len(type);
    fr = knob_flat_d(type) - sr + 2 * clearance;
    fh = knob_flat_h(type);
    skirt = knob_skirt(type);
    recess = knob_recess(type);
    pointer = knob_pointer(type);

    stl(knob_name(type))
    {
        difference() {
            union() {
                rotate_extrude() {
                    rounded_polygon([
                        [0, h, 0],
                        [r_top - r, h - r, r],
                        [r_bot, 0, 0],
                        [0, 0, 0],
                    ]);

                    if(skirt)
                        square([skirt.x / 2, skirt.y]);
                }
                if(pointer)
                    linear_extrude(pointer.z)
                        rotate(-90)
                            hull() {
                                translate([pointer.x, 0])
                                    square([eps, pointer.y[0]], center = true);

                                translate([r_bot, 0])
                                    square([eps, pointer.y[1]], center = true);
                            }
            }
            shaft_z = recess ? recess.z + (supports ? layer_height : -eps) : -eps;
            translate_z(shaft_z) {
                h = h - top_wall - shaft_z;
                linear_extrude(h)
                    difference() {
                        poly_circle(sr);

                        if(fr > 0)
                            translate([-sr, fr])
                                square([2 * sr, sr]);
                    }

                if(h > fh)
                    poly_cylinder(sr, round_to_layer(h - fh), center = false);
            }

            if(recess)
                translate_z(-eps)
                    hull() {
                        poly_cylinder(r = recess.x / 2, h = recess.y + eps, center = false);

                        linear_extrude(recess.z + eps)
                            offset(min(-(recess.z - recess.y), 0))
                                poly_circle(recess.x / 2);
                    }

            if(screw)
                translate_z(knob_screw_z(type))
                    rotate([90, 0, 180])
                        teardrop_plus(r = screw_pilot_hole(screw), h = max(r_top, r_bot) + eps, center = false);
        }
    }
}

//! Knob with grub screw in place