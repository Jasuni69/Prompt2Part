function sphere(r=1, d) =
  let(
    R = d == undef ? r : d/2,
    fragments = fragments(R),
    rings = floor((fragments+1)/2),
    c1 = get_points(circle(r=R)),
    points = flatten([for (i = [0:rings-1])
      let(angle =  (180 * (i + 0.5)) / rings)
      translate([0,0,R*cos(angle)], poly=sin(angle)*c1)
    ]),
    lp = len(points),
    faces = concat([for (i = [0:rings-2], j = [0:fragments-1])
      let (
        il = i * fragments,
        il1 = il + fragments,
        j1 = (j == fragments-1) ? 0 : j+1,
        i0 = il + j,
        i1 = il + j1,
        i2 = il1 + j,
        i3 = il1 + j1
      )
      [i0,i2,i3,i1]
    ], [irange(0,fragments-1),     // top ring face
        irange(lp-1,lp-fragments)] // bottom ring face
    )
  )
  [points,faces];

// cylinder