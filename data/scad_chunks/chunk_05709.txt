function keyhole(l, r1, r2, shoulder_r=0, d1, d2, length, anchor=CTR, spin=0) =
    let(
        l = first_defined([l,length,15]),
        r1 = get_radius(r=r1, d=d1, dflt=5),
        r2 = get_radius(r=r2, d=d2, dflt=10)
    )
    assert(is_num(l) && l>0)
    assert(l>=max(r1,r2))
    assert(is_undef(shoulder_r) || (is_num(shoulder_r) && shoulder_r>=0))
    let(
        cp1 = [0,0],
        cp2 = cp1 + [0,-l],
        shoulder_r = is_num(shoulder_r)? shoulder_r : min(r1,r2) / 2,
        minr = min(r1, r2) + shoulder_r,
        maxr = max(r1, r2) + shoulder_r,
        dy = opp_hyp_to_adj(minr, maxr),
        spt1 = r1>r2? cp1+[minr,-dy] : cp2+[minr,dy],
        spt2 = [-spt1.x, spt1.y],
        ds = spt1 - (r1>r2? cp1 : cp2),
        ang = atan2(abs(ds.y), abs(ds.x)),
        path = r1>r2? [
                if (shoulder_r<=0) spt1
                  else each arc(r=shoulder_r, cp=spt1, start=180-ang, angle=ang, endpoint=false),
                each arc(r=r2, cp=cp2, start=0, angle=-180, endpoint=false),
                if (shoulder_r<=0) spt2
                  else each arc(r=shoulder_r, cp=spt2, start=0, angle=ang, endpoint=false),
                each arc(r=r1, cp=cp1, start=180+ang, angle=-180-2*ang, endpoint=false),
            ] : [
                if (shoulder_r<=0) spt1
                  else each arc(r=shoulder_r, cp=spt1, start=180, angle=ang, endpoint=false),
                each arc(r=r2, cp=cp2, start=ang, angle=-180-2*ang, endpoint=false),
                if (shoulder_r<=0) spt2
                  else each arc(r=shoulder_r, cp=spt2, start=360-ang, angle=ang, endpoint=false),
                each arc(r=r1, cp=cp1, start=180, angle=-180, endpoint=false),
            ]
    ) reorient(anchor,spin, two_d=true, path=path, extent=true, p=path);