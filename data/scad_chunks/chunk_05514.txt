function _prism_fillet_sphere(name, R,bot, top, d, k, N, overlap, uniform, debug) = 
    let(
        isect = [for (i=idx(top))
                    let( isect_pt = _sphere_line_isect_best(abs(R), [top[i],bot[i]],sign(R)*(top[i]-bot[i])))
                    assert(isect_pt, str("Prism doesn't fully intersect sphere (",name,")"))
                    isect_pt
                ]
    )
    d==0 ? [isect,
            if (overlap!=0) isect,
            if (overlap!=0) [for(p=isect) p - overlap*sign(R)*unit(p)]
           ] :
    let(          
        tangent = path_tangents(isect,closed=true),
        mesh = transpose([for(i=idx(top))
           assert(norm(top[i]-isect[i])>=d,str("Prism is too short for fillet to fit (",name,")"))
           let(   
               dir = sign(R)*unit(cross(isect[i],tangent[i])),
               curveang = d * 180 / PI / R,
               edgepoint = rot(-curveang,v=tangent[i],p=isect[i]),
               corner = plane_line_intersection(plane_from_normal(edgepoint, edgepoint),
                                                [isect[i],top[i]],
                                                bounded=[R>0,true]),
               d_step = d*unit(top[i]-isect[i])+(uniform?isect[i]:corner)
           ) 
           assert(is_vector(corner,3),str("Fillet does not fit (",name,")"))
           assert(debug || R<0 || (d_step-corner)*(corner-isect[i])>0, 
                  str("Unable to fit fillet, probably due to steep curvature of the sphere (",name,")."))
           let(
               bez = _smooth_bez_fill([d_step,corner,edgepoint], k)         
           ) 
           [ 
             each bezier_curve(bez, N, endpoint=true),
             if (overlap!=0) edgepoint - overlap*sign(R)*unit(edgepoint)
           ]
        ]),
        test_profile = project_plane(plane_from_normal(centroid(top)-centroid(bot)), select(mesh,-2))
      )
      assert(debug || is_path_simple(test_profile,closed=true),str("Fillet doesn't fit: it intersects itself (",name,")"))
      mesh;



// Return an interpolated normal to the polygon at segment i, fraction u along the segment.