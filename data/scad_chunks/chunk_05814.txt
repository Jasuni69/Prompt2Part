module cylindrical_extrude(ir, or, od, id, size, convexity=10, spin=0, orient=UP) {
    req_children($children);
    ir = get_radius(r=ir,d=id);
    or = get_radius(r=or,d=od);
    check2 = assert(all_positive([ir,or]), "Must supply positive inner and outer radius or diameter");
    circumf = 2 * PI * or;
    size = is_undef(size) ? [circumf, 1000]
         : is_num(size) ? [size, 1000]
         : size;
    check1 = assert(is_vector(size,2) && all_positive(size), "Size must be a positive number or 2-vector");
    sides = segs(or);
    step = circumf / sides;
    steps = ceil(size.x / step);
    scalefactor = sides/PI*sin(180/sides); // Scale from circle to polygon, which has shorter length
    attachable() {
      rot(from=UP, to=orient) rot(spin) {
          for (i=[0:1:steps-1]) {
              x = (i+0.5-steps/2) * step;
              zrot(360 * x / circumf) {
                  fwd(or*cos(180/sides)) {
                      xrot(-90) {
                          linear_extrude(height=or-ir, scale=[ir/or,1], center=false, convexity=convexity) {
                              yflip()
                              xscale(scalefactor)
                              intersection() {
                                  left(x) children();
                                  rect([quantup(step,pow(2,-15)),size.y]);
                              }
                          }
                      }
                  }
              }
          }
      }
      union();
    }
}



//////////////////////////////////////////////////////////////////////
// Section: Bounding Box
//////////////////////////////////////////////////////////////////////

// Module: bounding_box()
// Synopsis: Creates the smallest bounding box that contains all the children.
// SynTags: Geom
// Topics: Miscellaneous, Bounds, Bounding Boxes
// See Also: pointlist_bounds()
// Usage:
//   bounding_box([excess],[planar]) CHILDREN;
// Description:
//   Returns the smallest axis-aligned square (or cube) shape that contains all the 2D (or 3D)
//   children given.  The module children() must 3d when planar=false and
//   2d when planar=true, or you will get a warning of mixing dimension
//   or scaling by 0.
// Arguments:
//   excess = The amount that the bounding box should be larger than needed to bound the children, in each axis.
//   planar = If true, creates a 2D bounding rectangle.  Is false, creates a 3D bounding cube.  Default: false
// Example(3D):
//   module shapes() {
//       translate([10,8,4]) cube(5);
//       translate([3,0,12]) cube(2);
//   }
//   #bounding_box() shapes();
//   shapes();
// Example(2D):
//   module shapes() {
//       translate([10,8]) square(5);
//       translate([3,0]) square(2);
//   }
//   #bounding_box(planar=true) shapes();
//   shapes();