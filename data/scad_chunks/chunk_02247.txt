module camera_assembly(cam, angle = 0) //! Camera case assembly
assembly(str("camera_", cam[0]), ngb = true) {
    front = cam_front_size(cam);
    screw = pcb_screw(camera_pcb(cam));
    nut = screw_nut(screw);
    screw_length = cam_screw_length(cam);
    hinge_z = hinge_z(cam);
    hinge_pos = [0, front.y / 2  + hinge_offset, -hinge_r];

    camera_bracket_position(cam) {
        nut = screw_nut(hinge_screw);

        stl_colour(pp1_colour) render()
            camera_bracket(cam);

        translate([-hinge_h, 0, hinge_z(cam)])
            rotate([-90, 0, 90]) {
                vflip()
                    translate_z(2 * hinge_h - nut_trap_depth(nut))
                        nut(nut, true);

                screw_and_washer(hinge_screw, screw_longer_than(2 * hinge_h));
            }
    }

    translate_z(hinge_z(cam) + hinge_r)
        translate(hinge_pos)
            rotate([-angle, 0, 0])
                translate(-hinge_pos) {
                    translate_z(cam_back_size(cam).z - front.z)
                        camera(cam);

                    stl_colour(pp1_colour) render()
                        translate_z(-front.z)
                            camera_back(cam);

                    cam_holes(cam) {
                        screw_and_washer(screw, screw_length);

                        translate_z(-front.z + nut_trap_depth(nut))
                            vflip()
                                nut(nut, true);
                    }

                    *translate(camera_lens_offset(cam))
                        translate_z(1.5)
                            stl_colour(pp1_colour) render()
                                rpi_camera_focus_ring_stl();

                    stl_colour(pp2_colour) render()
                        hflip()
                            camera_front(cam, 0);
                }
}