function tri_circle_packing(shape_pts, min_r) =
    let(
        center = tri_incenter(shape_pts),
        s1 = shape_pts[1] - shape_pts[0],
        s2 = shape_pts[2] - shape_pts[1],
        s3 = shape_pts[0] - shape_pts[2],
        cross_value = cross(s1, s2),
        nv = is_num(cross_value) ? [0, 0, cross_value] : cross_value,
        R = abs(norm(nv)) / (norm(s1) + norm(s2) + norm(s3)),

        ca = center - shape_pts[0],
        leng_ca = norm(ca),
        unit_ca = ca / leng_ca,
        sina = R / leng_ca,

        cb = center - shape_pts[1],
        leng_cb = norm(cb),
        unit_cb = cb / leng_cb,
        sinb = R / leng_cb,

        cc = center - shape_pts[2],
        leng_cc = norm(cc),
        unit_cc = cc / leng_cc,
        sinc = R / leng_cc
    )
    [
        [center, R], 
        each pack_one(min_r, center, nv, sina, leng_ca, unit_ca, R, R), 
        each pack_one(min_r, center, nv, sinb, leng_cb, unit_cb, R, R), 
        each pack_one(min_r, center, nv, sinc, leng_cc, unit_cc, R, R), 
    ];