module RingSeg(
grad=90,
size=4,
h,
rad=1.0,
r=10,
spiel=.5,
fn=fn,
fn2,
name,
help
){
  HelpTxt("RingSeg",["grad",grad,"size",size,"h",h,"rad",rad,"r",r,"spiel",spiel,"fn",fn,"fn2",fn2,"name",name],help);  
  $info=name;  
    rad2=rad+spiel;//spiel

h=assert(is_num(size))is_undef(h)?size:h;
   winkel2=asin(rad2/(r+size/2-rad));
   winkel1=asin(rad2/(r-size/2+rad));

fn2=is_undef(fn2)?fn:fn2;
fnS=fn2;
  
union(){
  $helpM=false;
difference(){
   Torus(grad=grad,end=+0,trx=r,d=size,fn=fn)Quad(size,h,r=rad,fn=fn2);
  //base part
   linear_extrude(h+5,center=true,convexity=5)polygon([
     [0,0],
     (r-size/2 +rad) *[sin(90-winkel1), cos(90-winkel1)],// mittelpunkt sphere1
     (r+size/2 -rad) *[sin(90-winkel2), cos(90-winkel2)],// mittelpunkt sphere2
     (r+size/2 +5)   *[sin(90-winkel2), cos(90-winkel2)],
     [r+size/2 +5,-rad],
   ]);

// angeled part
   linear_extrude(h+5,center=true,convexity=5)polygon([
     [0,0],
     (r-size/2 +rad) *[sin(-grad +90 +winkel1), cos(-grad +90 +winkel1)],// mittelpunkt sphere1
     (r+size/2 -rad) *[sin(-grad +90 +winkel2), cos(-grad +90 +winkel2)],// mittelpunkt sphere2
     (r+size/2 +5)   *[sin(-grad +90 +winkel2), cos(-grad +90 +winkel2)],
     (r+size/2 +5)   *[sin(90-grad-5),cos(90-grad-5)],
   ]); 
}

//End cabs
    hull(){
       rotate(asin(rad2/(r+size/2-rad))) T(r+size/2-rad)MKlon(tz=h/2-rad)OctaH(rad,n=fnS);
       rotate(asin(rad2/(r-size/2+rad))) T(r-size/2+rad)MKlon(tz=h/2-rad)OctaH(rad,n=fnS);
    }

    hull(){
       rotate(grad-asin(rad2/(r+size/2-rad))) T(r+size/2-rad)MKlon(tz=h/2-rad)OctaH(rad,n=fnS);
       rotate(grad-asin(rad2/(r-size/2+rad))) T(r-size/2+rad)MKlon(tz=h/2-rad)OctaH(rad,n=fnS);
    }
  }
}


/** \name Ring \page Objects
Ring() creates a ring
\param h height 0 for 2D
\param dicke rim thickness
\param d,r diameter radius
\param id ir inner diameter/radius
\param grad  angle
\param rcenter center rim on d/r
\param center center h
\param fn,fs fraqment number, size
\param name name
\param 2D makes a 2D ring
\param help help
\param cd  if false d or r (old - use rcenter instead)
*/
//Ring(r=10,ir=5,rcenter=0);