module tube(h=heightInfo(),d=$d,dInner=$dInner,dOuter=$dOuter,wall=$wall,d1=undef,
		d2=$d2,solid=solidInfo(),arc=0
             ,holeStickOut=0,stickOutBothEnds=false,innerChamfer=false,inverted=undef)
{
  $inverted= inverted==undef?$inverted:inverted;
  wall = zeroIfUndef(((dInner!=undef && dOuter!=undef)
				  ?((dOuter-dInner)/2):wall));
  d = ((dInner!=undef)
		  ?dInner+wall*2:
		      (dOuter!=undef
			       ?dOuter:((d==undef)?d1:d)));

  lx=d;
  ly=d;
  assert(h!=undef,"TUBE():h is undefined");
  assert(d!=undef,"TUBE():d is undefined");
  lz=h;
  summingUp= falseIfUndef($summingUp)
			 && !falseIfUndef($partOfAddAfterRemoving);

  translate(multV(alignInfo(),[lx,ly,lz])/2)
	   scale(addToV(multV(absV(stackingInfo()[1]/*stackOverlap*/)
                    ,[1/lx,1/ly,1/lz]),1))
  {
    if(($inverted && $removing)
	       || (!$inverted
		         && (solid || !(summingUp
			                       && ($removing || !$beforeRemoving)
                           ))))
    difference()
	  {
	     doChamferTube(lx=lx, ly=ly, lz=lz)
		   cylinder(h, d1=d, d2=(d2==undef)?d:d2, center=true);
	     align(TORIGHT,ZCENTER)
	     {
	        if(arc>=180)
		        intersection_for(angle=[-180+90,arc+90])
			         g(turnXY(angle)
                ,chamferInfoUpdate(invert=innerChamfer))
				  box(side = max(d,(d2==undef)?0:d2)
					     ,y=max(d,(d2==undef)?0:d2)
					      +2*2*max(zeroIfUndef(chamferInfo()[0][0])
                    ,zeroIfUndef(chamferInfo()[1][0]))
					          ,z=h+.1);

	        if(arc>0 && arc<180)
		       for(angle=[-180+90,arc+90])
			        g(turnXY(angle)
                //chamfer(disable=true)
                  ,chamferInfoUpdate(invert=innerChamfer))
				           box(side=max(d,(d2==undef)?0:d2)
					          ,y=max(d,(d2==undef)?0:d2)
					             +2*2*max(zeroIfUndef(chamferInfo()[0][0])
                    ,zeroIfUndef(chamferInfo()[1][0])
                ),h=h+.1);
	      }
	       if(!solid)up(stickOutBothEnds?0:holeStickOut/2)
		        cylinder(((h+.03+abs(holeStickOut)
			           +(stickOutBothEnds?abs(holeStickOut):0)))
				         ,d1=d-wall*2,d2=((d2==undef)?d:d2)-wall*2
                 ,center=true);

	      if((!solid && $inverted && $removing))
		        up(stickOutBothEnds?0:holeStickOut/2)
			           cylinder(((h+.03+abs(holeStickOut)
                          +(stickOutBothEnds?abs(holeStickOut):0)))
				                  ,d1=d-wall*2,d2=((d2==undef)?d:d2)-wall*2
                          ,center=true);
	    }
	    if(!solid && !$inverted && summingUp && $removing)
		    up(stickOutBothEnds?0:holeStickOut/2)
			     cylinder(((h+.03+abs(holeStickOut)
                +(stickOutBothEnds?abs(holeStickOut):0)))
				            ,d1=d-wall*2,d2=((d2==undef)?d:d2)-wall*2
                      ,center=true);
    }
    stackingTranslation=calcStackingTranslation(lx,ly,lz);
    $centerLineStack=calcCenterLineStackTube(lx,ly,lz,stackingTranslation);
    translate(stackingTranslation)
	    children();
  }

//--------------------------------------------------