function catenary_points(l, x, y, steps = 100) = //! Returns a list of 2D points on the curve that goes from the origin to `(x,y)` and has length `l`.
    let(
        d = x / 2,
        a = catenary_find_a(d, sqrt(sqr(l) - sqr(y))),   // Find a to get the correct length
        offset = argsinh(y / catenary_s(d, a)),
        t0 = sinh(-d / a + offset),
        t1 = sinh( d / a + offset),
        h = a * cosh(-d / a + offset) - a,
        lowest = offset > d / a ? [0, 0] : offset < -d / a ? [x, y] : [d - offset * a, -h],
        p0 = catenary(t0, a)
    )
    steps ? [for(t = [t0 : (t1 - t0) / steps : t1]) catenary(t, a) - p0] : lowest;