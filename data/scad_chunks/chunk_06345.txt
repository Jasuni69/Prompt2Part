module nema_stepper_motor(size=17, h=24, shaft_len=20, details=true, atype="body", anchor=TOP, spin=0, orient=UP)
{
    info = nema_motor_info(size);
    motor_width   = info[0];
    plinth_height = info[1];
    plinth_diam   = info[2];
    screw_spacing = info[3];
    screw_size    = info[4];
    screw_depth   = info[5];
    shaft_diam    = info[6];
    geom = atype=="shaft"? attach_geom(r=shaft_diam/2, h=shaft_len-plinth_height, cp=[0,0,h/2+plinth_height/2+shaft_len/2]) :
        atype=="plinth"? attach_geom(r=plinth_diam/2, h=plinth_height, cp=[0,0,h/2+plinth_height/2]) :
        atype=="body"? attach_geom(size=[motor_width, motor_width, h]) :
        atype=="screws"? attach_geom(size=[screw_spacing, screw_spacing, screw_depth], cp=[0,0,h/2-screw_depth/2]) :
        assert(in_list(atype, ["shaft", "plinth", "body", "screws"]));
    attachable(anchor,spin,orient, geom=geom) {
        up(h/2) {
            if (details == false) {
                slop = get_slop();
                color([0.4, 0.4, 0.4]) 
                    cuboid(size=[motor_width+2*slop, motor_width+2*slop, h+slop], anchor=TOP);
                color([0.6, 0.6, 0.6])
                    cylinder(h=plinth_height+slop, d=plinth_diam+2*slop);
                color("silver")
                    cylinder(h=shaft_len+slop, d=shaft_diam+2*slop, $fn=max(12,segs(shaft_diam/2)));
            } else if (size < 23) {
                difference() {
                    color([0.4, 0.4, 0.4]) 
                        cuboid(size=[motor_width, motor_width, h], chamfer=size>=8? 2 : 0.5, edges="Z", anchor=TOP);
                    color("silver")
                        xcopies(screw_spacing)
                            ycopies(screw_spacing)
                                cyl(r=screw_size/2, h=screw_depth*2, $fn=max(12,segs(screw_size/2)));
                }
                color([0.6, 0.6, 0.6]) {
                    difference() {
                        cylinder(h=plinth_height, d=plinth_diam);
                        cyl(h=plinth_height*3, d=shaft_diam+0.75);
                    }
                }
                color("silver") cylinder(h=shaft_len, d=shaft_diam, $fn=max(12,segs(shaft_diam/2)));
            } else {
                difference() {
                    union() {
                        color([0.4, 0.4, 0.4])
                            cuboid([motor_width, motor_width, h], rounding=screw_size, edges="Z", anchor=TOP);
                        color([0.6, 0.6, 0.6]) {
                            difference() {
                                cylinder(h=plinth_height, d=plinth_diam);
                                cyl(h=plinth_height*3, d=shaft_diam+0.75);
                            }
                        }
                        color("silver")
                            cylinder(h=shaft_len, d=shaft_diam, $fn=max(12,segs(shaft_diam/2)));
                    }
                    color([0.4, 0.4, 0.4]) {
                        xcopies(screw_spacing) {
                            ycopies(screw_spacing) {
                                cyl(d=screw_size, h=screw_depth*3, $fn=max(12,segs(screw_size/2)));
                                down(screw_depth) cuboid([screw_size*2, screw_size*2, h], anchor=TOP);
                            }
                        }
                    }
                }
            }
        }
        children();
    }
}



// Section: Masking Modules


// Module: nema_mount_mask()
// Synopsis: Creates a standard NEMA mount holes mask.
// SynTags: Geom
// Topics: Parts, Motors
// See Also: nema_stepper_motor(), nema_mount_mask()
// Usage:
//   nema_mount_mask(size, depth, l, [$slop], ...);
// Description: Creates a mask to use when making standard NEMA stepper motor mounts.
// Arguments:
//   size = The standard NEMA motor size to make a mount for.
//   depth = The thickness of the mounting hole mask.  Default: 5
//   l = The length of the slots, for making an adjustable motor mount.  Default: 5
//   ---
//   anchor = Translate so anchor point is at origin (0,0,0).  See [anchor](attachments.scad#subsection-anchor).  Default: `CENTER`
//   spin = Rotate this many degrees around the Z axis after anchor.  See [spin](attachments.scad#subsection-spin).  Default: `0`
//   orient = Vector to rotate top towards, after spin.  See [orient](attachments.scad#subsection-orient).  Default: `UP`
//   $slop = The printer-specific slop value to make parts fit just right.
// Anchor Types:
//   "full" = Anchor relative the full mask.
//   "screws" = Anchor relative to the screw hole centers.  ie: TOP+RIGHT+FRONT is the center-top of the front-right screwhole.
// Examples:
//   nema_mount_mask(size=14, depth=5, l=5);
//   nema_mount_mask(size=17, depth=5, l=5);
//   nema_mount_mask(size=17, depth=5, l=0);