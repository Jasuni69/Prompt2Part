module cylinder_fillet(h,r=1,d,fillet,fillet_top,fillet_bottom,printable=false,center=false)
{
  radius = is_undef(d) ? r : d/2;
  epsilon = 0.001;

  filcommon = is_undef(fillet)        ? 0 : fillet;
  filtop    = is_undef(fillet_top)    ? filcommon : fillet_top;
  filbottom = is_undef(fillet_bottom) ? filcommon : fillet_bottom;
  zshift    = center == true          ? -h/2       : 0;

  translate([0,0,zshift])
  {
    if(filbottom < 0)
    {
      translate([0,0,-filbottom])
        mirror([0,0,1])
          FilletInwards(radius,-filbottom,print=printable);
    }
    else if(filbottom > 0)
    {
      FilletOutwards(radius,filbottom);
    }

    // The middle part is made larger towards the top and bottom,
    // to be sure that the pieces connect.
    larger_for_bottom = filbottom == 0 ? 0 : epsilon;
    larger_for_top    = filtop    == 0 ? 0 : epsilon;
    translate([0,0,abs(filbottom) - larger_for_bottom])
      cylinder(h-abs(filtop)-abs(filbottom)+larger_for_top+larger_for_bottom,r=radius);

    if(filtop < 0)
    {
      translate([0,0,h+filtop])
        FilletInwards(radius,-filtop);
    }
    else if(filtop > 0)
    {
      translate([0,0,h])
        mirror([0,0,1])
          FilletOutwards(radius,filtop);
    }
  }

  module FilletInwards(r_outer,r_tube,print=false)
  {
    // Oversize the box to avoid rounding glitches.
    box = [2*r_outer+1,2*r_outer+1,r_tube+1];
    x1 = r_tube * sqrt(2)/2;
    x2 = r_tube * (sqrt(2)-1);
    y  = r_tube * sqrt(2)/2;

    // A polygon that can be added for a slanted
    // bottom to make it printable without support.
    printable_polygon =
    [
      [0,y],[0,r_tube],[r_outer-r_tube+x2,r_tube],[r_outer-r_tube+x1,y]
    ];
    
    hull()
    {
      difference()
      {
        rotate_extrude()
        {
          translate([r_outer-r_tube,0])
            circle(r_tube);
          if(print)
            polygon(printable_polygon);
        }
        translate([0,0,-box.z/2])
          cube(box,center=true);
      }
    }
  }

  module FilletOutwards(r_outer,r_tube)
  {
    rotate_extrude()
      difference()
      {
        square([r_outer+r_tube,r_tube]);
        translate([r_outer+r_tube,r_tube])
          circle(r_tube);
      }
  }
}


// ==============================================================
//
// heart2D
// -------
// June 4, 2024, Version 1
// by Stone Age Sculptor, CC0, Public Domain
//
// The lower part of the heart is a sine curve on its side.
// The upper part consists of two circle.
//
// Parameters:
//   size   : Set the size (by specifying the width).
//   raise  : Raise the middle between the circles at the top.
//   stretch: Stretch the lower part.
//   shift  : Shift the bottom tip sidewards.
//   points : Total number of points for the shape.
//
// To do: add a variable to make the tip at the bottom less pointy.
//