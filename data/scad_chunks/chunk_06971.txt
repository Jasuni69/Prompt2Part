module test_make_region(){
   pentagram = turtle(["move",100,"left",144], repeat=4);
   region1 = make_region(pentagram);
   assert(are_regions_equal(region1,
            [[[0, 0], [38.196601125, 0], [30.9016994375, 22.451398829]], [[50,
            36.3271264003], [19.0983005625, 58.7785252292], [30.9016994375,
            22.451398829]], [[69.0983005625, 22.451398829], [50, 36.3271264003],
            [80.9016994375, 58.7785252292]], [[61.803398875, 3.5527136788e-15],
            [69.0983005625, 22.451398829], [100, 0]], [[38.196601125, 0],
            [61.803398875, 3.94430452611e-31], [50, -36.3271264003]]], either_winding=true));
   /*assert_approx(region1, 
            [[[0, 0], [38.196601125, 0], [30.9016994375, 22.451398829]], [[50,
            36.3271264003], [19.0983005625, 58.7785252292], [30.9016994375,
            22.451398829]], [[69.0983005625, 22.451398829], [50, 36.3271264003],
            [80.9016994375, 58.7785252292]], [[61.803398875, 3.5527136788e-15],
            [69.0983005625, 22.451398829], [100, 0]], [[38.196601125, 0],
            [61.803398875, 3.94430452611e-31], [50, -36.3271264003]]]);*/
   region2 = make_region(pentagram,nonzero=true);
   assert_approx(region2,
            [[[0, 0], [38.196601125, 0], [50, -36.3271264003],
            [61.803398875, 3.5527136788e-15], [100, 0],
            [69.0983005625, 22.451398829], [80.9016994375,
            58.7785252292], [50, 36.3271264003], [19.0983005625,
            58.7785252292], [30.9016994375, 22.451398829]]]);
   region3 = make_region([square(10), move([5,5],square(8))]);
   assert_equal(region3, [[[10, 0], [0, 0], [0, 10], [5, 10], [5, 5], [10, 5]], [[5, 10], [10, 10], [10, 5], [13, 5], [13, 13], [5, 13]]]);
}
test_make_region();