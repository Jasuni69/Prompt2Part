module gear2d(
	mm_per_tooth    = 3,     //this is the "circular pitch", the circumference of the pitch circle divided by the number of teeth
	number_of_teeth = 11,    //total number of teeth around the entire perimeter
	teeth_to_hide   = 0,     //number of teeth to delete to make this only a fraction of a circle
	pressure_angle  = 28,    //Controls how straight or bulged the tooth sides are. In degrees.
	clearance       = undef, //gap between top of a tooth on one gear and bottom of valley on a meshing gear (in millimeters)
	backlash        = 0.0,   //gap between two meshing teeth, in the direction along the circumference of the pitch circle
	bevelang        = 0.0,
	interior        = false
) {
	path = gear2d(
		mm_per_tooth    = mm_per_tooth,
		number_of_teeth = number_of_teeth,
		teeth_to_hide   = teeth_to_hide,
		pressure_angle  = pressure_angle,
		clearance       = clearance,
		backlash        = backlash,
		bevelang        = bevelang,
		interior        = interior
	);
	polygon(path);
}


// Module: gear()
// Description:
//   Creates a (potentially helical) involute spur gear.
//   The module `gear()` gives an involute spur gear, with reasonable
//   defaults for all the parameters.  Normally, you should just choose
//   the first 4 parameters, and let the rest be default values.  The
//   module `gear()` gives a gear in the XY plane, centered on the origin,
//   with one tooth centered on the positive Y axis.  The various functions
//   below it take the same parameters, and return various measurements
//   for the gear.  The most important is `pitch_radius()`, which tells
//   how far apart to space gears that are meshing, and `outer_radius()`,
//   which gives the size of the region filled by the gear.  A gear has
//   a "pitch circle", which is an invisible circle that cuts through
//   the middle of each tooth (though not the exact center). In order
//   for two gears to mesh, their pitch circles should just touch.  So
//   the distance between their centers should be `pitch_radius()` for
//   one, plus `pitch_radius()` for the other, which gives the radii of
//   their pitch circles.
//   In order for two gears to mesh, they must have the same `mm_per_tooth`
//   and `pressure_angle` parameters.  `mm_per_tooth` gives the number
//   of millimeters of arc around the pitch circle covered by one tooth
//   and one space between teeth.  The `pressure_angle` controls how flat or
//   bulged the sides of the teeth are.  Common values include 14.5
//   degrees and 20 degrees, and occasionally 25.  Though I've seen 28
//   recommended for plastic gears. Larger numbers bulge out more, giving
//   stronger teeth, so 28 degrees is the default here.
//   The ratio of `number_of_teeth` for two meshing gears gives how many
//   times one will make a full revolution when the the other makes one
//   full revolution.  If the two numbers are coprime (i.e.  are not
//   both divisible by the same number greater than 1), then every tooth
//   on one gear will meet every tooth on the other, for more even wear.
//   So coprime numbers of teeth are good.
// Arguments:
//   mm_per_tooth = This is the "circular pitch", the circumference of the pitch circle divided by the number of teeth
//   number_of_teeth = Total number of teeth around the entire perimeter
//   thickness = Thickness of gear in mm
//   hole_diameter = Diameter of the hole in the center, in mm
//   teeth_to_hide = Number of teeth to delete to make this only a fraction of a circle
//   pressure_angle = Controls how straight or bulged the tooth sides are. In degrees.
//   clearance = Clearance gap at the bottom of the inter-tooth valleys.
//   backlash = Gap between two meshing teeth, in the direction along the circumference of the pitch circle
//   bevelang = Angle of beveled gear face.
//   twist = Teeth rotate this many degrees from bottom of gear to top.  360 makes the gear a screw with each thread going around once.
//   slices = Number of vertical layers to divide gear into.  Useful for refining gears with `twist`.
//   scale = Scale of top of gear compared to bottom.  Useful for making crown gears.
//   interior = If true, create a mask for difference()ing from something else.
//   orient = Orientation of the gear.  Use the `ORIENT_` constants from `constants.scad`.  Default: `ORIENT_Z`.
//   align = Alignment of the gear.  Use the `V_` constants from `constants.scad`.  Default: `V_CENTER`.
// Example: Spur Gear
//   gear(mm_per_tooth=5, number_of_teeth=20, thickness=8, hole_diameter=5);
// Example: Beveled Gear
//   gear(mm_per_tooth=5, number_of_teeth=20, thickness=10*cos(45), hole_diameter=5, twist=-30, bevelang=45, slices=12, $fa=1, $fs=1);