module strap_end(type = strap) { //! Generate the STL for end piece
    z1 = strap_height(type) - strap_thickness(type) - clearance;
    z2 = strap_height(type) + strap_key(type);
    r1 = strap_boss_r(type) - 1;

    module outer()
        hull() {
            translate([0, -strap_end_width(type) / 2])
                square([strap_boss_r(type) + overlap, strap_end_width(type)]);

            translate([-strap_extension(type) / 2, 0])
                circle(d = strap_end_width(type));
        }

    module with_hole()
        difference() {
            children();

            circle(r1);
        }

    stl("strap_end")
        union() {
            linear_extrude(z1)
                with_hole()
                    outer();

            translate_z(z1)
                linear_extrude(strap_height(type) - z1)
                    difference() {
                        outer();

                        hull() {
                            translate([0, -strap_width(type) / 2 - clearance])
                                square([strap_boss_r(type) + overlap, strap_width(type) + 2 * clearance]);

                            translate([-strap_extension(type) / 2, 0])
                                circle(d = strap_width(type) + 2 * clearance);
                        }
                    }

            linear_extrude(strap_height(type) - layer_height)
                with_hole()
                    strap_boss_shape(type);

            linear_extrude(z2)
                with_hole()
                     offset(cnc_bit_r)
                        offset(-step - cnc_bit_r)
                            strap_boss_shape(type);

            render() difference() {
                cylinder(r = r1 + eps, h = z2);

                translate_z(z2)
                    insert_hole(strap_insert(type), counterbore);
            }
        }
}
//
//! * Place the insert into the hole and push home with a soldering iron with a tapered bit heated to 200&deg;C.
//