module tubeShell(h=heightInfo(),d=$d,dInner=$dInner,dOuter=$dOuter,wall=$wall
                ,solid=solidInfo(),arc=0
                ,innerChamfer=false)
{
  wall = zeroIfUndef(((dInner!=undef && dOuter!=undef)
				  ?((dOuter-dInner)/2):wall));
  d = ( dInner != undef )
		      ? dInner + wall * 2
          : ( dOuter != undef? dOuter : d);

  lx=d;
  ly=d;
  assert(h!=undef,"TUBESOFTHOLE():h is undefined");
  assert(d!=undef,"TUBESOFTHOLE():d is undefined");
  lz=h;
  summingUp= falseIfUndef($summingUp)
			 && !falseIfUndef($partOfAddAfterRemoving);

  translate(multV(alignInfo(),[lx,ly,lz])/2)
	   scale(addToV(multV(absV(stackingInfo()[1]/*stackOverlap*/)
                    ,[1/lx,1/ly,1/lz]),1))
  {
    difference()
    {
      translate([0,0,-h/2])
        linear_extrude(height=h)
          difference()
	    {
		    circle(d=d);
        if(!solid)
          circle(d=d-wall*2);
      }

      align(TORIGHT,ZCENTER)
	    {
	        if(arc>=180)
		        intersection_for(angle=[-180+90,arc+90])
			         g(turnXY(angle)
                ,chamferInfoUpdate(invert=innerChamfer))
				  box(side = d
					  ,y = d + 2*2
                 * max(zeroIfUndef(chamferInfo()[0][0])
                    ,zeroIfUndef(chamferInfo()[1][0]))
					          ,z=h+.1);

	        if(arc>0 && arc<180)
		        for(angle=[-180+90,arc+90])
			         g(turnXY(angle)
                  ,chamferInfoUpdate(invert=innerChamfer))
				              box(side = d
					               ,y=d + 2*2*max(zeroIfUndef(chamferInfo()[0][0])
                            ,zeroIfUndef(chamferInfo()[1][0])
                ),z=h+.1);
	      }
	    }
    }
  stackingTranslation=calcStackingTranslation(lx,ly,lz);
  $centerLineStack=calcCenterLineStackTube(lx,ly,lz,stackingTranslation);

  translate(stackingTranslation)
    children();
  }

//-------------------------------------------------

//USE THE chamfer() function instead!!
//THIS FUNCTION IS NORMALLY NOT SUPPOSED TO BE CALLED BY THE USER
//because you need the object dimensions to use ist ,
//it caries  out the chamfering when called internally by tube() or Box()
// with parameters set before by chamfer()
// it is called within tube() and box() function
//lz =height Of chamfered Object to Top )
//lx,ly= horizontal size of chamfered object
//chamferInfo set of sides to chamfer, set by the previos call to chamfer() module