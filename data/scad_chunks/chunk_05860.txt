function turtle3d(commands, state=RIGHT, transforms=false, full_state=false, repeat=1) =
  assert(is_bool(transforms))
  let(
       state = is_matrix(state,4,4) ? [[state],[yrot(90)],1,90,0] :
               is_vector(state,3) ?
                  let( updir = UP - (UP * state) * state / (state*state) )
                  [[frame_map(x=state, z=approx(norm(updir),0) ? FWD : updir)], [yrot(90)],1, 90, 0]
                : assert(_turtle3d_state_valid(state), "Supplied state is not valid")
                  state,
       finalstate = _turtle3d_repeat(commands, state, repeat)
  )
    assert(is_integer(repeat) && repeat>=0, "turtle3d repeat argument must be a nonnegative integer")
    full_state  ? finalstate 
  : !transforms ? deduplicate([for(T=finalstate[0]) apply(T,[0,0,0])])
  : [for(i=idx(finalstate[0])) finalstate[0][i]*finalstate[1][i]];