module test_xrot() {
    vals = [-270,-135,-90,45,0,30,45,90,135,147,180];
    path = path3d(pentagon(d=100), 50);
    for (a=vals) {
        m = [[1,0,0,0],[0,cos(a),-sin(a),0],[0,sin(a),cos(a),0],[0,0,0,1]];
        assert_approx(xrot(a), m);
        assert_approx(xrot(a, p=path[0]), apply(m, path[0]));
        assert_approx(xrot(a, p=path), apply(m, path));
        // Verify that module at least doesn't crash.
        xrot(a) union(){};
    }
}
test_xrot();