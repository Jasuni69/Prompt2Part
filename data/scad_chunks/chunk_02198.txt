module _bbox_assembly(type, top = true, base = true, left = true, right = true, back = true, front = true) { //! The box assembly, wrap with a local copy without parameters
    width = bbox_width(type);
    depth = bbox_depth(type);
    height = bbox_height(type);
    echo("Butt_box:", width, depth, height, volume = bbox_volume(type), area = bbox_area(type));

    t = sheet_thickness(bbox_sheets(type));
    bt = sheet_thickness(bbox_base_sheet(type));
    tt = sheet_thickness(bbox_top_sheet(type));
    star_washers = bbox_star_washers(type);
    thin_blocks = bbox_thin_blocks(type);
    short = bbox_short_inserts(type);

    function is_missing_screw(p) = p.y > depth / 2 - 1 ? !back : false;

    assembly(bbox_name(type)) {

        for(p = corner_block_positions(type))
            let(q = transform([0, 0, 0], p), thickness = q.z > 0 ? tt : bt)
                multmatrix(p)
                    fastened_corner_block_assembly(is_missing_screw(q) && ((q.z > 0) != (q.x > 0)) ? 0 : t, bbox_screw(type), thickness,
                                                   is_missing_screw(q) && ((q.z > 0) == (q.x > 0)) ? 0 : t, star_washers = star_washers, short_insert = short);

        h = height / 2 - 1;
        for(p = fixing_block_positions(type))
            let(q = transform([0, 0, 0], p), thickness = q.z > h ? tt : q.z < -h ? bt : t)
                multmatrix(p)
                    if(thin_blocks)
                        fastened_2screw_block_assembly(is_missing_screw(q) ? 0 : t, bbox_screw(type), thickness_below = thickness, star_washers = star_washers, short_insert = short);
                    else
                        fastened_fixing_block_assembly(is_missing_screw(q) ? 0 : t, bbox_screw(type), thickness2 = thickness, star_washers = star_washers);

        for(x = [-1, 1])
            translate([x * (width / 2 + t / 2 + eps + 25 * exploded()), 0])
                rotate([90, 0, x * 90])
                    if(x > 0) {
                        if(right)
                            bbox_right(type);
                    }
                    else
                        if(left)
                            bbox_left(type);

        for(y = [1, -1])
            translate([0, y * (depth / 2 + t / 2 + eps + 25 * exploded())])
                rotate([90, 0, y * 90 + 90])
                    if(y < 0) {
                        if(front)
                            bbox_front(type);
                    }
                    else
                        if(back)
                            bbox_back(type);

        for(z = [-1, 1]) {
            sheet_thickness = z > 0 ? tt : bt;
            translate_z(z * (height / 2 + sheet_thickness / 2 + eps + 100 * exploded()))
                if(z > 0) {
                    if(top)
                        bbox_top(type);
                }
                else
                    if(base)
                        bbox_base(type);
        }
    }
}