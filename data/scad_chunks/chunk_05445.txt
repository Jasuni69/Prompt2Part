function desc_attach(desc, anchor=UP, p, reverse=false) =
    assert(is_description(desc), "Invalid description")
    let(
         T = linear_solve($transform, desc[0]),
         anch = _find_anchor(anchor,desc[1]),
         centerpoint = apply(T,CENTER),
         pos = apply(T, anch[1]),
         y = apply(T*rot(from=UP,to=anch[2])*zrot(anch[3]),BACK)-centerpoint,
         z = apply(T,anch[2])-centerpoint
    )
    reverse ? frame_map(z=z,y=y,reverse=true, p=move(-pos,p))
            : move(pos,frame_map(z=z,y=y, p=p));


// Function: desc_dist()
// Synopsis: Computes the distance between two points specified by attachable descriptions
// Topics: Descriptions, Attachments
// See Also: parent(), desc_point()
// Usage:
//   dist = desc_dist(desc1,anchor1,desc2,anchor2);
//   dest = desc_dist(desc1=, desc2=, [anchor1=], [anchor2=]);
// Description:
//   Computes the distance between two points specified using attachable descriptions and optional anchor
//   points.  If you omit the anchor point(s) then the computation uses the CENTER anchor.
// Arguments:
//   desc1 = First description
//   anchor1 = Anchor for first description
//   desc2 = Second description
//   anchor2 = Anchor for second description
// Example(3D): Computes the distance between a point on each cube. 
//  cuboid(10) let(desc=parent()) {
//      color("red")attach(TOP+LEFT+FWD) sphere(r=0.75,$fn=12);
//      right(15) cuboid(10) {
//        color("red") attach(TOP+RIGHT+BACK) sphere(r=0.75,$fn=12);
//        echo(desc_dist(parent(),TOP+RIGHT+BACK, desc, TOP+LEFT+FWD));  // Prints 26.9258
//      }
//  }