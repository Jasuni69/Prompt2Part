module socket_box_stl() {
    stl("socket_box");

    difference() {
        linear_extrude(height = height, convexity = 5)
            face_plate(socket);

        difference() {
            translate_z(base_thickness)
                linear_extrude(height = height, convexity = 5)
                     offset(-wall) face_plate(socket);

            z = height + mains_socket_height(socket) - screw_length - wall;
            for(side = [-1, 1])
                difference() {
                    hull()
                        for(x = [1, 2])
                            translate([side * mains_socket_pitch(socket) / x, 0, 0])
                                cylinder(d = insert_boss, h = 100);
                    hull() {
                        translate([side * mains_socket_pitch(socket) / 2, 0, 0])
                            cylinder(d = insert_boss - 4 * extrusion_width, h = z);

                        translate([side * (mains_socket_width(socket) / 2 - wall - 1), 0, z / 2])
                            cube([2, insert_boss - 4 * extrusion_width, z], center = true);
                    }
                    w = show_supports() ? 1 : 20;
                    translate([side * (mains_socket_width(socket) / 2 - wall - w/ 2), 0, z / 2])
                        cube([w, insert_boss + 1, z], center = true);
                }
        }
        //
        // Socket holes
        //
        translate_z(height)
            mains_socket_hole_positions(socket) {
                poly_cylinder(r = screw_clearance_radius, h = 2 * (screw_length - mains_socket_height(socket)) + 2, center = true);

                poly_cylinder(r = insert_hole_radius, h = 2 * insert_length, center = true);
            }
        //
        // IEC holes
        //
        difference() {
            translate([iec_x, iec_y, iec_z])
                rotate([90, 0, -90])
                    iec_holes(iec);

                linear_extrude(height = height, convexity = 5)
                     offset(-wall) face_plate(socket);
        }
        //
        // Jack holes
        //
        for(x = [-1, 0, 1])
            translate([x * jack_pitch, -mains_socket_width(socket) / 2, jack_z])
                rotate([90, 0, 0])
                    jack_hole();

        for(x = [-1, 1])
            translate([x * jack_pitch / 2, mains_socket_width(socket) / 2, jack_z])
                rotate([90, 0, 0])
                    jack_hole();
        //
        // Feet holes
        //
        foot_positions()
            poly_cylinder(r = screw_clearance_radius(foot_screw(foot)), h = 100, center = true);
    }
}
//
//! 1. Remove the support material from under the insert lugs.
//! 2. Place the inserts into the holes in the lugs and press home with a soldering iron with a conical bit heated to 200&deg;C.
//