function nut (e=2,es=10,a=6,b,base=1,h=1,s,shift=0,grad,z,t=0)=
  let(
  t=v3(t),
  s=assert(grad!=0)is_undef(s)?is_num(grad)&&is_num(b)?e*(a+b-2*h*tan(90+grad)):
                                       is_undef(es)?assert( is_num(b) && is_num(a),"define a + b")a+b:
                                                    e * es:
                s,
  
  es=is_num(grad)&&is_num(b)?a+b-2*h*tan(90+grad):
                  s/e,

  b=is_undef(grad)?is_undef(b)?(es-a)/2*[1,1]:
                               b/2*[1,1]:
                   is_list(grad)?[h*tan(90+grad[0])+(es-a)/2,h*tan(90+grad[1])+(es-a)/2]:
                                 [h*tan(90+grad)+(es-a)/2,h*tan(90+grad)+(es-a)/2]
  )
 is_num(z)?
   [[s,base,z]+t,[s,0,z]+t,[0,0,z]+t,[0,base,z]+t,
  for(i=[0:e-1])each[
      [b[0]+i*es,base,z]+t,    
      [es/2-a/2+shift+i*es,h+base,z]+t,
      [es/2+a/2+shift+i*es,h+base,z]+t,
      [(es-b[1])+i*es,base,z]+t]
      ]:

   [[s,base]+t.xy,[s,0]+t.xy,[0,0]+t.xy,[0,base]+t.xy,
  for(i=[0:e-1])each[
      [b[0]+i*es,base]+t.xy,    
      [es/2-a/2+shift+i*es,h+base]+t.xy,
      [es/2+a/2+shift+i*es,h+base]+t.xy,
      [es-b[1]+i*es,base]+t.xy]
      ];
      
      
/** \name involute
\page Functions
involute() creates points for an involute on a circle
\param r radius circle
\param h height of the involute â†¦ grad
\param grad degree of the circle segment
\param fn,fs fraqments or size
\param rot rotation
\param rev reverse point order
\param delta additional change towards end
\param z  creates vector3 points with z height 
*/
//polygon(involute());