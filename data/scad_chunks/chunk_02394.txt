module ribbon_clamp(ways, screw = screw) { //! Generate STL for given number of ways
    screw_d = screw_radius(screw) * 2;

    pitch = ribbon_clamp_hole_pitch(ways, screw);
    d = ribbon_clamp_width(screw);
    h = ribbon_clamp_height(screw, ways);
    slot_d = is_list(ways) ? ways[1] * inch(0.05) : ribbon_clamp_slot_depth();
    t = round_to_layer(slot_d + wall);
    insert = screw_insert(screw);

    stl(str("ribbon_clamp_", str_ways(ways), str_screw_d(screw_d)))
        difference() {
            union() {
                hull() {
                    translate_z(h - t / 2)
                        cube([ribbon_clamp_hole_pitch(ways, screw), d, t], center = true);

                    translate_z(1)
                        cube([pitch, max(wall, d - 2 * (h - t)), 2], center = true);
                }
                ribbon_clamp_hole_positions(ways, screw, -1)
                    cylinder(d = d, h = h);

                ribbon_clamp_hole_positions(ways, screw, 1)
                    cylinder(d = d, h = h);
            }

            translate_z(h)
                cube([ribbon_clamp_slot(ways), d + 1, slot_d * 2], center = true);

            ribbon_clamp_hole_positions(ways, screw)
                translate_z(h)
                    rotate(22.5)
                        insert_hole(insert, ribbon_clamp_screw_depth(screw) - insert_length(insert));
        }
}