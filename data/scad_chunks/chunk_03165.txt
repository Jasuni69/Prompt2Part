//                              it will be used as a mask for the cutout. With the Rotation 
//                              and offsets applied. This can be used to fine tune the mask
//                              placement within the opening.
//    n(d) = { <yappCoordPCB> | yappCoordBox | yappCoordBoxInside }
//    n(e) = { <yappOrigin>, yappCenter }
//    n(f) = { <yappGlobalOrigin>, yappAltOrigin } // Only affects Top(lid), Back and Right Faces
//    n(g) = [yappPCBName, "XXX"] : Specify a PCB. Defaults to [yappPCBName, "Main"]
//    n(h) = { yappFromInside } Make the cut from the inside towards the outside
//-------------------------------------------------------------------

cutoutsBase = 
[
];

cutoutsLid  = 
[

  //Spherical cutout for Joystick
  [
    pcbLength("Joystick") - 12.25, //pcbLength("Joystick")/2, //xPos
    pcbWidth("Joystick")/2, // yPos
    10-7 + (-lidPlaneThickness/2), // Shift offset in Z to the inside of the lid - offset needed
    undef, //    p(3) = length
    14.5, //    Joystick Hat radius
    yappSphere, //    p(5) = shape 
    20+lidPlaneThickness, //5 // depth
    //yappCoordBox,
    yappCenter,
    [yappPCBName, "Joystick"], 
  ]



// [20,20, 0, 10, 20, yappRing, yappCenter]
// ,[70,20, 5, 10, 20, yappRing, yappDefault, 0, yappCenter]
// ,[120,20, -5, 10, 20, yappRing, yappDefault, 45, yappCenter]
];

cutoutsFront = 
[
];  


cutoutsBack = 
[
  [5,  //    p(0) = from Back
    3,//    p(1) = from Left (height)
    undef,//    p(2) = width
    11.5,//    p(3) = length
    13.3/2, //    p(4) = radius