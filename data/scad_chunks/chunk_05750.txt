module vnf_wireframe(vnf, width=1)
{
  no_children($children);
  vertex = vnf[0];
  edges = unique([for (face=vnf[1], i=idx(face))
                    sort([face[i], select(face,i+1)])
                 ]);
  attachable()
  {
    union(){
      for (e=edges) extrude_from_to(vertex[e[0]],vertex[e[1]]) circle(d=width);
      // Identify vertices actually used and draw them
      vertused = search(count(len(vertex)), flatten(edges), 1);
      for(i=idx(vertex)) if(vertused[i]!=[]) move(vertex[i]) sphere(d=width);
    }
    union();
  }
}


// Section: Operations on VNFs

       

// Function: vnf_volume()
// Synopsis: Returns the volume of a VNF.
// Topics: VNF Manipulation
// See Also: vnf_area(), vnf_halfspace(), vnf_bend() 
// Usage:
//   vol = vnf_volume(vnf);
// Description:
//   Returns the volume enclosed by the given manifold VNF.   The VNF must describe a valid polyhedron with consistent face direction and
//   no holes; otherwise the results are undefined.  Returns a positive volume if face direction is clockwise and a negative volume
//   if face direction is counter-clockwise.

// Divide the polyhedron into tetrahedra with the origin as one vertex and sum up the signed volume.