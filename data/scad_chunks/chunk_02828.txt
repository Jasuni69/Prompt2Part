function _SubdivisionWeighted(list,divisions) =
  divisions > 0 && len(list) > 2 ?
    let (weight = sqrt(2) - 1)
    let (n = len(list)-1)
    let (list2 = [ for(i=[0:n]) (list[i] + list[(i+1) > n ? 0 : i+1])/2 ])
    let (list3 = [ for(i=[0:n]) (weight*list[i] + (1-weight)/2*(list2[i] + list2[(i-1) < 0 ? n : i-1])) ])
  _SubdivisionWeighted([ for(i=[0:n]) each [list3[i], list2[i]] ], divisions-1) : list;

// My own attempt with variable weighting.
// But now for a path with a open begin and end.