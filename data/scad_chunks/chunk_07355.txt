module Schlaufe(grad=120,r=10,r2,mitte=0,grad2=0,l=0,h,lap=.001,center=true,edge=true,end=false,$messpunkt=false,name,help,$fn=0){

end=is_list(end)?end:[end,end];

grad20=is_list(grad2)?grad2[0]:grad2/2;
grad21=is_list(grad2)?grad2[1]:grad2/2;

grad2=is_list(grad2)?grad2[0]+grad2[1]:grad2;

r2=is_undef(r2)?is_list(r)?r[1]:
                           r:
                r2;

r1=is_list(r)?r[0]:
              r;

grad=max(grad2/2,grad);

r10=r1;
r20=r2;
r11=r1;
r21=r2;

gradR1=grad;
gradR10=grad;
gradR11=grad;

gradR2=grad;

x1=r10*cos(grad20);
x12=r11*cos(grad21);
y1=r10*sin(grad)+r20*sin(grad)+mitte/2;

minH=x1-r10*cos(gradR10)-cos(gradR2)*r20+r20;

h=is_undef(h)?minH:h; // höhe
hDelta=h-(x1-r10*cos(gradR10)-cos(gradR2)*r20+r20); // hight diff for r2 to be at h

l2=grad!=180?norm([hDelta,hDelta/tan(grad)]):hDelta;// h extension

yh=cos(grad)*l2;// h y delta


//xMitte=x1-r1*cos(gradR1)-cos(gradR2)*r2+r2+hx;// center extrude x distance

//endDist=(-r1*sin(grad20)+y1+yh);// halber enden abstand
endDist2=[(-r10*sin(grad20)+y1+yh),(-r11*sin(grad21)+y1+yh)];//  enden abstand

edge=grad2%180==0?0:edge;

//centerDist=norm([endDist,endDist*tan(grad2/2)]);
centerDist=[norm([endDist2[0],endDist2[0]*tan(grad20)]),norm([endDist2[1],endDist2[1]*tan(grad21)])];

cDl=grad2>=180?[0,0]:centerDist;

l=(is_list(l)?l:[l,l]) - (edge?cDl:[0,0]);

if(h<minH)echo(str("h min",minH));
if(grad-grad2/2==0)echo("r1  angle 0!");



pos=center?center==-1?[-h+r2,0]:
                      [edge?-(endDist2[0])*tan(grad2/2)+(is_bool(edge)?0:
                                                                 edge):
                            0,
                              0]:
           [0,endDist2[0]];

InfoTxt("Schlaufe",["endDist",str(endDist2,"/",[l[0]/tan(grad20),l[1]/tan(grad21)]+(endDist2)),"centerDist",centerDist+pos.x*[1,1],"height",h,"r2center",h-r2+pos.x,"l",l],name);

grad3=180-(grad20+grad21);// winkel gamma
//echo(grad3,grad20,grad21,vSum(endDist2));
centerDistB=(vSum(endDist2)/sin(grad3)) * sin(grad21); // end0↦pC
pC=RotLang(grad20,centerDistB)-[0,endDist2[0]];




translate(pos){
Pivot(p0=[h-r2,0],active=[1,0,0,1,0,1],txt="M2");
Pivot(p0=[x1,y1],active=[1,0,0,1,0,1],txt="M1");

if(grad2%180!=0&&(endDist2[0]!=endDist2[1]||grad20!=grad21)){
  color("green")Pivot(p0=[endDist2[1]*tan(grad21),0],active=[1,0,0,1]);
  color("orange")Pivot(p0=[endDist2[0]*tan(grad20),0],active=[1,0,0,1]);
  Pivot(p0=pC,active=[1,0,0,1,0,1],txt="C");
  } 
  else if(grad2%180!=0)Pivot(p0=[endDist2[0]*tan(grad20),0],active=[1,0,0,1]);

$idx=true;
$tab=is_undef($tab)?1:b($tab,false)+1;
$info=false;

if(end[0])T(0,-endDist2[0])rotate(-grad20)T(0,-max(0,l[0]))rotate(-90)RotEx(cut=true,center=true,grad=180+lap*2,fn=fn/4)children();
if(end[1])T(x1-x12,endDist2[1])rotate(+grad21)T(0,max(0,l[1]))rotate(90)RotEx(cut=true,center=true,grad=180+lap*2,fn=fn/4)children();

  translate([x1,y1]){
    translate([0,yh])rotate(grad21){
      rotate_extrude(angle=gradR11-grad21)translate([-r11,0])children();// r1
      if(l[1]>0)color("green")translate([-r11,l[1]])rotate([90])linear_extrude(l[1]+lap,center=false,convexity=5)children();//l[1]
      if(l2)color("green")rotate(gradR11-grad21)translate([-r11,lap])rotate([90])linear_extrude(l2+lap*2,center=false,convexity=5)children();//l2
    }
    translate([hDelta,0])rotate(gradR11)translate([-r11-r21,0])rotate((l2?0:lap))rotate_extrude(angle=-gradR2-(l2?0:lap)-(mitte?0:lap/2))translate([r21,0]){
    $idx=false;
    $info=name;
    children();
    }
  }

  if(mitte)translate([h,0])rotate([90])linear_extrude(mitte+lap*2,center=true,convexity=5)children();

  translate([x1,-y1]){
    translate([0,-yh])rotate(-grad20){
      rotate_extrude(angle=-gradR10+grad20)translate([-r10,0])children();//r1
      if(l[0]>0)color("orange")translate([-r1,+lap])rotate([90])linear_extrude(l[0]+lap,center=false,convexity=5)children();//l[0]
      if(l2)color("orange")rotate(-gradR10+grad20)translate([-r10,l2+lap])rotate([90])linear_extrude(l2+lap*2,center=false,convexity=5)children();//l2
    }
    translate([hDelta,0])rotate(-gradR10)translate([-r10-r20,0])rotate(l2?0:-lap)rotate_extrude(angle=gradR2+(l2?0:lap)+(mitte?0:lap/2))translate([r20,0])children();
  }
}

MO(!$children);
HelpTxt("Schlaufe",["grad",grad,"r",r,"r2",r2,"mitte",mitte,"grad2",grad2,"l",l,"h",h,"lap",lap,"center",center,"edge",edge,"name",name],help);
}