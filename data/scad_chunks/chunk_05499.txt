module rounded_prism(bottom, top, joint_bot=0, joint_top=0, joint_sides=0, k_bot, k_top, k_sides,
                     k=0.5, splinesteps=16, h, length, l, height, convexity=10, debug=false,
                     anchor="origin",cp="centroid",spin=0, orient=UP, atype="hull")
{
  dummy1 = assert(in_list(atype, ["intersect","hull","surf_intersect","surf_hull","prismoid"]),
                  "Anchor type must be one of: \"hull\", \"intersect\", \"surf_hull\", \"surf_intersect\" or \"prismoid\"")
           assert(atype!="prismoid" || len(bottom)==4, "Anchor type \"prismoid\" requires that len(bottom)=4");
  
  result = rounded_prism(bottom=bottom, top=top, joint_bot=joint_bot, joint_top=joint_top, joint_sides=joint_sides,
                         k_bot=k_bot, k_top=k_top, k_sides=k_sides, k=k, splinesteps=splinesteps, h=h, length=length, height=height, l=l,
                         debug=debug, _full_info=true);
  height = one_defined([l,h,height,length], "l,h,height,length", dflt=undef);
  top = is_undef(top) ? path3d(bottom,height/2) :
        len(top[0])==2 ? path3d(top,height/2) :
        top;
  bottom = len(bottom[0])==2 ? path3d(bottom,-height/2) : bottom;
  unrounded = vnf_vertex_array([top,bottom],caps=true, col_wrap=true,reverse=true);

  vnf = result[1];
  geom = atype=="prismoid" ?
               let(
                    botbounds = pointlist_bounds(bottom),
                    topbounds = pointlist_bounds(top),
                    allz = column(concat(bottom,top),2),
                    height = max(allz)-min(allz),
                    size = [botbounds[1].x-botbounds[0].x, botbounds[1].x-botbounds[0].x, height],
                    size2 = [topbounds[1].x-topbounds[0].x, topbounds[1].x-topbounds[0].x],
                    shift = point2d(mean(topbounds)-mean(botbounds))
                )    
                attach_geom(size=size, size2=size2, shift=shift,anchors=result[2], override=result[3])
       : in_list(atype,["hull","intersect"]) ? attach_geom(vnf=unrounded, extent=atype=="hull", cp=cp, anchors=result[2])
       : attach_geom(vnf=vnf, extent=atype=="surf_hull", cp=cp, anchors=result[2]);
  attachable(anchor=anchor, spin=spin, orient=orient, geom=geom)
  {
    if (debug){
        vnf_polyhedron(vnf, convexity=convexity);
        debug_bezier_patches(result[0], showcps=true, splinesteps=splinesteps, $fn=16, showdots=false, showpatch=false);
    }
    else vnf_polyhedron(vnf,convexity=convexity);
    children();
  }
}