module rd_coil(type, value, pitch = undef) { //! Draw the specified vertical coil
    size = rd_coil_size(type);
    wire = rd_coil_wire(type);
    pitch = is_undef(pitch) ? wire.x : pitch;
    wire_d = wire.y;
    wire_r = wire_d / 2;
    vitamin(str("rd_coil(", type[0], " ,\"", value, "\"): Radial inductor ", size.z, "x", size.x, " ", value));
    $fs = fs; $fa = fa;
    end = (size.z - size[3]) / 2;
    function sigmoid(x) = 1 / (1 + exp(-x));
    z = end + size[3] / 2;
    h = size[3] - wire_d;
    turns = rd_coil_turns(type);

    color(rd_coil_colour(type)) {
        cylinder(d = size.y, h = size.z);

        for(z = [0, size.z - end])
            translate_z(z)
                cylinder(d = size.x, h = end);
    }

    color(silver)
        for(side = [-1, 1])
            translate([side * pitch / 2, 0]) {
                vflip()
                    cylinder(d = wire_d, h = wire.z, $fn = fn);

                solder(wire.y / 2);
            }

    color(copper) {
        r = size.y / 2 + wire_r;
        sides = r2sides4n(r);
        leadin = sides / 4;
        total = sides * turns;
        shortcut = 3;
        spiral = [
            for(i = [shortcut: total - shortcut])
                let(a = 360 * i / sides,
                    j = i <= leadin ? leadin - i : i >= total - leadin ? i - (total - leadin) : 0,
                    R = r + j * wire_r / leadin
                )
                [R * cos(a), R * sin(a), (size[3] - wire.y) * i / total + end + wire_r]
        ];
        half_spiral = [
            for(i = [sides / 2 - shortcut : -1 : shortcut * 2])
                let(a = 360 * i / sides, R = r + wire_d)
                    [R * cos(a), R * -sin(a), h * sigmoid((i - sides / 4) / 2) + end + wire_r]

        ];
        path = bezier_join([[-pitch / 2, 0, -eps], [-pitch / 2, 0, 0]], bezier_join(bezier_join(half_spiral, spiral, 1), [[pitch / 2, 0, 0], [pitch / 2, 0, -eps]], 3), 3);
        sweep(path, circle_points(wire_r, $fn = fn));
    }

    color("white")
        translate_z(size.z)
            linear_extrude(eps)
                 resize([size.x * 0.9, 0], auto = true)
                    text(value, halign = "center", valign = "center");

}