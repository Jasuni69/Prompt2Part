module test_lift_plane() {
    assert(approx(lift_plane([[-10,0,-10], [0,0,0], [0,-10,-10]],[0,10*sqrt(2)/2]),[-5,0,-5]));
    assert(approx(lift_plane([[-10,0,-10], [0,0,0], [0,-10,-10]],[6.12372, 10.6066]),[0,-5,-5],eps=1e-5));

    assert_approx(lift_plane([[3,4,5],[1,3,9],[4,7,13]], [[0,0],[0,4.58257569496],[6.26783170528,5.89188303637]]),[[3,4,5],[1,3,9],[4,7,13]]);

    assert_approx(project_plane([2,3,4,2]),[[0.920855800833,-0.11871629875,-0.371390676354,0],[-0.11871629875,0.821925551875,-0.557086014531,-2.77555756156e-17],[0.371390676354,0.557086014531,0.742781352708,-0.371390676354],[0,0,0,1]]);
    assert_approx(project_plane([[1,1,1],[3,1,3],[1,1,4]]),[[-1/sqrt(2),1/sqrt(2),0,0],[0,0,1,-1],[1/sqrt(2),1/sqrt(2),0,-sqrt(2)],[0,0,0,1]]);

    N=30;
    data2 = list_to_matrix(rands(0,10,3*N,seed=77),3);
    data3 = [for (d=data2) [d.x,d.y,d.x*3+d.y*5+2]];
    planept = select(data3,0,N-4);
    testpt = select(data3, N-3,-1);
    newdata = project_plane(planept,testpt);
    assert_approx( lift_plane(planept, newdata), testpt);
    assert_approx( lift_plane(planept, project_plane(planept, last(testpt))), last(testpt));
    assert_approx( lift_plane(planept) * project_plane(planept) , ident(4));
    assert_approx( lift_plane([1,2,3,4]) * project_plane([1,2,3,4]) , ident(4));
    assert_approx( lift_plane([[1,1,1],[3,1,3],[1,1,4]]) * project_plane([[1,1,1],[3,1,3],[1,1,4]]) , ident(4));        
    
}
test_lift_plane();