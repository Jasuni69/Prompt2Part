module HirthJoint(z=10,d=20,deg=60,h,s=1.5,base=5,spiel=-spiel,chamfer=.5,opt=0,centerH=0,help){
  e=z;
  deltaDeg=deg==90?[90/z+gradS(r=d/2,s=abs(spiel)/2),90/z-gradS(r=d/2,s=abs(spiel)/2)]
                  :[gradS(r=d/2,s=s/2+spiel/2*tan(90-deg)),gradS(r=d/2,s=s/2-spiel/2*tan(90-deg))];
  h=h?assert(is_num(h))h:deg<90?(d*PI/(e*2)-s)*tan(deg):is_undef(h)?PI*d/e/2:h;
  base=max(h/2+chamfer,base);
  shift=180/e;
  h0=h/2;
  h1=h/2;
  delta=deltaDeg[1]*1*0; // sawtooth
  fn=fs2fn(r=h/2,fs=fs)*e;

HelpTxt("HirthJoint",["z",z,"d",d,"deg",deg,"h",h,"s",s,"base",base,"spiel",spiel,"chamfer",chamfer,"opt",opt,"centerH",centerH],help);
  
  p=
  opt?
    [
    each kreis(d=d-.5,rand=0,fn=fn,endPoint=false,z=-base,rot=0),
    each kreis(d=d,rand=0,fn=fn,endPoint=false,z=-base+.25,rot=0),
    for(i=[fn +0:-1:0])each[
    [cos(360/fn*i)*d/2,sin(360/fn*i)*d/2,min(h/2-abs(spiel),sin(i/fn*360*e-shift*e/2)*h/2)+h1-h0],
    ],
    [0,0,centerH] 
  ]:
  [
    each kreis(d=d-chamfer*2,rand=0,fn=e*4, endPoint=false,z=-base,rot=shift*.75),
    if(chamfer)each kreis(d=d,rand=0,fn=e*4, endPoint=false,z=-base+chamfer,rot=.75*shift+delta),
    for(i=[e -1:-1:0])each[
     [cos(shift+360/(e)*i+deltaDeg[1]+delta)*d/2,sin(shift+360/(e)*i+deltaDeg[1]+delta)*d/2,+h1],
     [cos(shift+360/(e)*i-deltaDeg[1]+delta)*d/2,sin(shift+360/(e)*i-deltaDeg[1]+delta)*d/2,+h1],
     [cos(360/(e)*i+deltaDeg[0])*d/2,sin(360/(e)*i+deltaDeg[0])*d/2,-h0],
     [cos(360/(e)*i-deltaDeg[0])*d/2,sin(360/(e)*i-deltaDeg[0])*d/2,-h0]
    ],
    [0,0,centerH] 
  ];

  PolyH(p,loop=opt?fn:e*4,pointEnd=2,convexity=z);
}


/** \name AxialBearing
\brief AxialBearing() creates an axial bearing
\example AxialBaring(part=1);
\param id inner diameter
\param dd outer diameter
\param ball ball diameter
\param r optional ball running radius
\param h height
\param part part selection 1:outer 2 inner 3 balls 4 ball cage
\param dicke wall thickness
\param numBalls optional number of bearing balls
\param h2  extra height for cutting children parts
\param clip overlap for snap fit
\param cage cage thickness
\param chamfer chamfer
*/
/*
Cut(){
AxialBearing(part=0);
AxialBearing(part=3);
Tz(7)R(180)AxialBearing(part=2);
}//*/