module bolt (
  options,
  length,
  kind = DEFAULT_BOLT_KIND,
  head_diameter_clearance = DEFAULT_HEAD_DIAMETER_CLEARANCE,
  head_top_clearance = 0,
  length_clearance = 0,
  countersink = 0
) {
  b = bolt_data(options, kind);

  head_length = is_num(b.head_length) ? b.head_length : 0;
  translate([0, 0, -countersink * head_length]) {
    translate([0, 0, -length_clearance]) {
      // If the bolt is headless, we consider the `head_top_clearance` an
      // extension of the bolt itself. Despite the kind name, the concept
      // of hiding a bolt beneath material and needing to expose its "head"
      // still applies.
      cylinder(d = b.diameter, h = length + length_clearance + (kind == "headless" ? head_top_clearance : 0));
    }

    if (kind != "headless") {
      // The "countersunk" bolt's (ISO 10642) head is part of the bolt length,
      // as opposed to any other case we handle/I can think of.
      translate([0, 0,  length - (kind == "countersunk" ? head_length : 0)]) {
        bolt_head(
          b,
          kind,
          head_diameter_clearance,
          head_top_clearance = max(
            (countersink - (kind == "countersunk" ? 0 : 1)) * head_length,
            0
          ) + head_top_clearance
        );
      }
    }
  }
}