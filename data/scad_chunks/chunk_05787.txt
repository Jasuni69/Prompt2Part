module cubetruss_support(size, strut, extents=1, anchor=CENTER, spin=0, orient=UP) {
    extents = is_num(extents)? [1,1,extents] : extents;
    size = is_undef(size)? $cubetruss_size : size;
    strut = is_undef(strut)? $cubetruss_strut_size : strut;
    check =
      assert(is_int(extents.x) && extents.x > 0)
      assert(is_int(extents.y) && extents.y > 0)
      assert(is_int(extents.z) && extents.z > 0);
    w = (size-strut) * extents.x + strut;
    l = (size-strut) * extents.y + strut;
    h = (size-strut) * extents.z + strut;
    attachable(anchor,spin,orient, size=[w,l,h], size2=[l,0], shift=[0,l/2], axis=DOWN) {
        xcopies(size-strut, n=extents.x) {
            difference() {
                half_of(BACK/extents.y + UP/extents.z, s=size*(max(extents)+1))
                    cube([size,l,h], center=true);
                half_of(BACK/extents.y + UP/extents.z, cp=strut, s=size*(max(extents)+1)) {
                    ycopies(size-strut, n=extents.y) {
                        zcopies(size-strut, n=extents.z) {
                            cyl(h=size+1, d=size-2*strut, circum=true, realign=true, orient=RIGHT, $fn=8);
                            cyl(h=size+1, d=size-2*strut, circum=true, realign=true, $fn=8);
                            cube(size-2*strut, center=true);
                        }
                    }
                }
                zcopies(size-strut, n=extents.z) {
                    cyl(h=extents.y*size+1, d=size-2*strut, circum=true, realign=true, orient=BACK, $fn=8);
                }
            }
        }
        children();
    }
}



// Section: Cubetruss Support

// Module: cubetruss_foot()
// Synopsis: Creates a foot that can connect two cubetrusses.
// SynTags: Geom
// Topics: Trusses, CubeTruss, FDM Optimized, Parts
// See Also: cubetruss_segment(), cubetruss_support(), cubetruss(), cubetruss_corner()
// Usage:
//   cubetruss_foot(w, [size=], [strut=], [clipthick=]) [ATTACHMENTS];
// Description:
//   Creates a foot that can be clipped onto the bottom of a truss for support.
// Arguments:
//   w = The number of cube segments to span between the clips.  Default: 1
//   size = The length of each side of the cubetruss cubes.  Default: `$cubetruss_size` (usually 30)
//   strut = The width of the struts on the cubetruss cubes.  Default: `$cubetruss_strut_size` (usually 3)
//   clipthick = The thickness of the clips.  Default: `$cubetruss_clip_thickness` (usually 1.6)
//   ---
//   $slop = make fit looser to allow for printer overextrusion
//   anchor = Translate so anchor point is at origin (0,0,0).  See [anchor](attachments.scad#subsection-anchor).  Default: `CENTER`
//   spin = Rotate this many degrees around the Z axis.  See [spin](attachments.scad#subsection-spin).  Default: `0`
//   orient = Vector to rotate top towards.  See [orient](attachments.scad#subsection-orient).  Default: `UP`
// Examples:
//   cubetruss_foot(w=1);
//   cubetruss_foot(w=3);