module gear(
	mm_per_tooth    = 3,     //this is the "circular pitch", the circumference of the pitch circle divided by the number of teeth
	number_of_teeth = 11,    //total number of teeth around the entire perimeter
	thickness       = 6,     //thickness of gear in mm
	hole_diameter   = 3,     //diameter of the hole in the center, in mm
	teeth_to_hide   = 0,     //number of teeth to delete to make this only a fraction of a circle
	pressure_angle  = 28,    //Controls how straight or bulged the tooth sides are. In degrees.
	clearance       = undef, //gap between top of a tooth on one gear and bottom of valley on a meshing gear (in millimeters)
	backlash        = 0.0,   //gap between two meshing teeth, in the direction along the circumference of the pitch circle
	bevelang        = 0.0,   //angle of bevelled gear face.
	twist           = undef, //teeth rotate this many degrees from bottom of gear to top.  360 makes the gear a screw with each thread going around once
	slices          = undef, //Number of slices to divide gear into.  Useful for refining gears with `twist`.
	interior        = false,
	orient          = ORIENT_Z,
	align           = V_CENTER
) {
	p = pitch_radius(mm_per_tooth, number_of_teeth);
	c = outer_radius(mm_per_tooth, number_of_teeth, clearance, interior);
	r = root_radius(mm_per_tooth, number_of_teeth, clearance, interior);
	p2 = p - (thickness*tan(bevelang));
	orient_and_align([p, p, thickness], orient, align) {
		difference() {
			linear_extrude(height=thickness, center=true, convexity=10, twist=twist, scale=p2/p, slices=slices) {
				gear2d(
					mm_per_tooth    = mm_per_tooth,
					number_of_teeth = number_of_teeth,
					teeth_to_hide   = teeth_to_hide,
					pressure_angle  = pressure_angle,
					clearance       = clearance,
					backlash        = backlash,
					bevelang        = bevelang,
					interior        = interior
				);
			}
			if (hole_diameter > 0) {
				cylinder(h=2*thickness+1, r=hole_diameter/2, center=true);
			}
			if (bevelang != 0) {
				h = (c-r)*sin(bevelang);
				translate([0,0,-thickness/2]) {
					difference() {
						cube([2*c/cos(bevelang),2*c/cos(bevelang),2*h], center=true);
						cylinder(h=h, r1=r, r2=c, center=false);
					}
				}
			}
		}
	}
}


// Module: rack()
// Description:
//   The module `rack()` gives a rack, which is a bar with teeth.  A
//   rack can mesh with any gear that has the same `mm_per_tooth` and
//   `pressure_angle`.
// Arguments:
//   mm_per_tooth  = This is the "circular pitch", the circumference of the pitch circle divided by the number of teeth
//   number_of_teeth = Total number of teeth along the rack
//   thickness = Thickness of rack in mm (affects each tooth)
//   height = Height of rack in mm, from tooth top to back of rack.
//   pressure_angle = Controls how straight or bulged the tooth sides are. In degrees.
//   backlash = Gap between two meshing teeth, in the direction along the circumference of the pitch circle
//   orient = Orientation of the rack.  Use the `ORIENT_` constants from `constants.scad`.  Default: `ORIENT_X`.
//   align = Alignment of the rack.  Use the `V_` constants from `constants.scad`.  Default: `V_RIGHT`.
// Example:
//   rack(mm_per_tooth=5, number_of_teeth=10, thickness=5, height=5, pressure_angle=20);