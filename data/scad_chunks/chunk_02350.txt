module fixing_block(screw = def_screw) { //! Generate the STL
   r = 1;
    insert = screw_insert(screw);
    corner_rad = insert_outer_d(insert) / 2 + wall;
    fb_width = fixing_block_width(screw);
    fb_height = fixing_block_height(screw);
    fb_depth = fixing_block_depth(screw);

    stl(str("fixing_block_M", screw_radius(screw) * 20))
        difference() {
            union() {
                linear_extrude(fb_height, convexity = 5)
                    difference() {
                        hull() {
                            for(side = [-1, 1]) {
                                translate([side * (fb_width / 2 - corner_rad), fb_depth - corner_rad])
                                    circle4n(corner_rad);

                                translate([side * (fb_width / 2 - r), r])
                                    circle4n(r);
                            }
                        }
                        fixing_block_v_holes(screw)
                            poly_circle(screw_clearance_radius(screw));
                    }
            }
            translate_z(fb_height)
                fixing_block_v_holes(screw)
                    insert_hole(insert);

            fixing_block_h_hole(screw)
                insert_hole(insert, 10, true);
        }
}