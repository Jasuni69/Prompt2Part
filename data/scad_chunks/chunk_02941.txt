module addDisplayMounts(mode)
{
  //for(displayMount=displayMounts)
  //{
    
  if (len(displayMounts) > 0)
  {
    for(i=[0:len(displayMounts)-1])  
    {
      displayMount=displayMounts[i];



    //-- Get the desired coordinate system    
    theCoordSystem = getCoordSystem(displayMount, yappCoordBox);    
    useCenter = (isTrue(yappCenter, displayMount));
      
    xPos = translate2Box_X (displayMount[0], yappLid, theCoordSystem);
    yPos = translate2Box_Y (displayMount[1], yappLid, theCoordSystem);

    displayWidth = displayMount[2];
    displayHeight = displayMount[3];
    pinInsetH= displayMount[4];
    pinInsetV= displayMount[5];
    pinDiameter = displayMount[6];
    postOverhang  = pinDiameter;
    postOffset = displayMount[7];
    walltoPCBGap = displayMount[8];
    pcbThickness  = displayMount[9];
    windowWidth = displayMount[10];
    windowHeight= displayMount[11];
    windowOffsetH = displayMount[12];
    windowOffsetV = displayMount[13];
    bevel = displayMount[14];
    rotation = getParamWithDefault(displayMount[15],0);         //-- Display rotation
    capDiameter = getParamWithDefault(displayMount[16],pinDiameter*2);         //-- Display rotation
    wallThickness = getParamWithDefault(displayMount[17],lidPlaneThickness);
    
    capSlack = getParamWithDefault(displayMount[18],0);         //-- capSlack
    
    useSelfThreading = isTrue(yappSelfThreading, displayMount) ? true : false;

    faceWidth = max(displayWidth + ((pinInsetH-pinDiameter/2 - postOverhang) * -2), windowWidth+(wallThickness*2));
    faceHeight = max(displayHeight + ((pinInsetV-pinDiameter/2 - postOverhang) * -2), windowHeight+(wallThickness*2));

    offsetX = (useCenter) ? 0 : faceWidth/2;
    offsetY = (useCenter) ? 0 : faceHeight/2;
        
   echo(xPos=xPos, yPos=yPos, displayWidth=displayWidth, faceWidth=faceWidth, faceHeight=faceHeight, offsetX=offsetX, offsetY=offsetY);
   
   if (mode == 0) 
   {
    //-- Do the Cutout in the lid
    tmpArray = [[0, 0, faceWidth, faceHeight, 0, yappRectangle, 0, 0, yappCoordBox, (useCenter) ?yappCenter : undef]];
    translate([xPos,yPos,0])
    {
      color("green")
      rotate([0,0,rotation])
      processFaceList(yappLid, tmpArray, yappPartLid, "cutout", true);
    }// translate
   }//(mode == 0)
   
   if (mode == 1) 
   //-- Generate the Mount
   {
     //-- Add the Mount
     translate([xPos+offsetX,yPos+offsetY,0])
     rotate([0,0,rotation])
      displayMount(
        displayWidth,
        displayHeight,
        wallThickness,
        pinInsetH,
        pinInsetV,
        pinDiameter,
        postOverhang,
        walltoPCBGap,
        pcbThickness,
        windowWidth,
        windowHeight,
        windowOffsetH,
        windowOffsetV,
        bevel,
        postOffset/2,
        useSelfThreading);
   }//(mode == 1)
   if (mode == 2) 
   //-- Generate the clips
   {
     if ((printDisplayClips) && (!useSelfThreading))
     {
       translate ([0,i*-10,0])
        clip (capDiameter, capSlack,  pinDiameter, pcbThickness, 4);
     }
   }//(mode == 2)
  } //-- for displayMounts
}
} //-- addDisplayMounts()