function quad (x=10,y,r,t=[0,0], z,center=true,fn=fn) = 
 let(
 y=is_list(x)?assert(is_num(x.y))x.y:is_undef(y)?assert(is_num(x))x:assert(is_num(y))y,
 x=is_list(x)?assert(is_num(x.x))x.x:assert(is_num(x))x,
 rdg=runden(min(x,y)/PHI/2,2),
 r=is_list(r)?r:is_undef(r)?[rdg,rdg,rdg,rdg]:[r,r,r,r],
 tC=t+(center?[0,0]:[x,y]/2),
 fn=is_list(fn)?fn:fn/4*[1,1,1,1]
) 
concat(
  arc(t=[-x/2 +r[0%len(r)], -y/2 +r[0%len(r)] ]+tC,r=r[0%len(r)],deg=90,rot=180,fn=fn[0%len(fn)],z=z),
  arc(t=[ x/2 -r[1%len(r)], -y/2 +r[1%len(r)] ]+tC,r=r[1%len(r)],deg=90,rot=270 ,fn=fn[1%len(fn)],z=z),  
  arc(t=[ x/2 -r[2%len(r)],  y/2 -r[2%len(r)] ]+tC,r=r[2%len(r)],deg=90,rot=0  ,fn=fn[2%len(fn)],z=z),
  arc(t=[-x/2 +r[3%len(r)],  y/2 -r[3%len(r)] ]+tC,r=r[3%len(r)],deg=90,rot=90,fn=fn[3%len(fn)],z=z)
);