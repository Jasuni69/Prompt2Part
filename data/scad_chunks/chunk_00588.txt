module light_strip(type, segs = undef) { //! Draw specified light strip, segs can be used to limit the length
    segment_length =  light_strip_length(type) / (light_strip_leds(type) / light_strip_grouped(type));
    segments = is_undef(segs) ? leds / light_strip_grouped(type) : segs;
    l = light_strip_cut_length(type, segs);
    vitamin(str("light_strip(", type[0], arg(segs, undef), "): Light strip ", type[1], " x ", l, "mm (", segments, " segments)"));
    leds = light_strip_grouped(type) * segments;
    w = light_strip_width(type);
    d = light_strip_depth(type);
    t = light_strip_thickness(type);
    a = light_strip_aperture(type);
    s = (w - a) / 2 - t;
    p = light_strip_pcb_thickness(type);
    x1 = w / 2;
    x2 = x1 - t;
    x3 = a / 2;
    y1 = t;
    y5 = d - s;
    y4 = y5 - t;
    y3 = y4 - p;
    y2 = y3 - t;

    module led_positions()
        for(i = [0 : leds - 1])
            translate([l * (i + 0.5) / leds - l / 2, 0])
                children();

    module segment_positions(n = segments)
        for(i = [0 : 1 : n - 1])
            translate([l * i / segments - l / 2, 0])
                children();

    module resistor_positions()
        segment_positions()
            for(end = [-1, 1], side = end > 0 ? [-1, 1] : [0])
                translate([end * l / leds / 2 + segment_length / 2, side * 2])
                    children();

    color("silver")
        rotate([90, 0, 90])
            linear_extrude(l, center = true)
                polygon([
                    [ x1,  0], [ x1,  d], [ x2,  d], [ x3, y5], [ x3, y4], [ x2, y4],
                    [ x2, y3], [ x3, y3], [ x3, y2], [ x2, y2], [ x2, y1],
                    [-x2, y1], [-x2, y2], [-x3, y2], [-x3, y3], [-x2, y3], [-x2, y4],
                    [-x3, y4], [-x3, y5], [-x2,  d], [-x1,  d], [-x1,  0],
                ]);

    color("ghostwhite")
        translate_z(y3 + p / 2)
            cube([l, w - 2 * t, p], center = true);

    translate_z(y4) {
        color("white")
            linear_extrude(1.6)
                led_positions()
                    square([5, 5], center = true);

        color("yellow")
            linear_extrude(1.6 + eps)
                led_positions()
                    circle(d = 3.5);

        color("silver")
            linear_extrude(0.8)
                led_positions()
                    for(side = [-1,1], end = [-1:1])
                        translate([side * 2.2, end * 1.6])
                            square([1, 0.9], center = true);

        color("black")
            linear_extrude(0.1)
                segment_positions(segments - 1)
                    translate([segment_length, 0])
                        square([0.2, a], center = true);

        color("silver")
            linear_extrude(0.15)
                segment_positions()
                    for(end = [-1, 1], side = [-1, 1])
                        translate([end * (segment_length / 2 - 1.25) + segment_length / 2, side * 2.5])
                            square(2.5, center = true);

        color("silver")
            linear_extrude(0.55)
                resistor_positions()
                    square([3.2, 1.5], center = true);

        color("black")
            linear_extrude(0.55 + eps)
                resistor_positions()
                    square([2.1, 1.5 + 2 * eps], center = true);
    }

    if(show_rays)
        %cylinder(r = 1, h = 150);
}

wall = 1.8;
clearance = 0.2;