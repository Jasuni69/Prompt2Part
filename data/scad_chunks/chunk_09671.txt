module fillet_angled_edge_mask(h=1.0, r=1.0, ang=90, center=true)
{
	sweep = 180-ang;
	n = ceil(segs(r)*sweep/360);
	x = r*sin(90-(ang/2))/sin(ang/2);
	linear_extrude(height=h, convexity=4, center=center) {
		polygon(
			points=concat(
				[for (i = [0:n]) let (a=90+ang+i*sweep/n) [r*cos(a)+x, r*sin(a)+r]],
				[for (i = [0:n]) let (a=90+i*sweep/n) [r*cos(a)+x, r*sin(a)-r]],
				[
					[min(-1, r*cos(270-ang)+x-1), r*sin(270-ang)-r],
					[min(-1, r*cos(90+ang)+x-1), r*sin(90+ang)+r],
				]
			)
		);
	}
}


// Module: fillet_angled_corner_mask()
// Usage:
//   fillet_angled_corner_mask(fillet, ang);
// Description:
//   Creates a shape that can be used to fillet the corner of an angle.
//   Difference it from the object to be filletted.  The center of the mask
//   object should align exactly with the point of the corner to be filletted.
// Arguments:
//   fillet = radius of the fillet.
//   ang = angle between planes that you need to fillet the corner of.
// Example:
//   ang=60;
//   difference() {
//       angle_pie_mask(ang=ang, h=50, r=200);
//       up(50/2) {
//           #fillet_angled_corner_mask(fillet=20, ang=ang);
//           zrot_copies([0, ang]) right(200/2) fillet_mask_x(l=200, r=20);
//       }
//       fillet_angled_edge_mask(h=51, r=20, ang=ang);
//   }