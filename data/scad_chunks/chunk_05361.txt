function cylindrical_to_xyz(r,theta,z) =
    theta != undef
      ? assert(is_num(r) && is_num(theta) && is_num(z), "\nBad arguments.")
        [r*cos(theta), r*sin(theta), z]
      : assert(is_list(r), "\nBad arguments.")
        is_num(r.x)
          ? cylindrical_to_xyz(r.x, r.y, r.z)
          : [for(p = r) cylindrical_to_xyz(p.x, p.y, p.z)];


// Function: xyz_to_cylindrical()
// Synopsis: Convert 3D cartesian coordinates to cylindrical coordinates. 
// Topics: Coordinates, Points, Paths
// See Also: cylindrical_to_xyz(), xy_to_polar(), polar_to_xy(), xyz_to_spherical(), spherical_to_xyz()
// Usage:
//   rtz = xyz_to_cylindrical(x,y,z);
//   rtz = xyz_to_cylindrical([X,Y,Z]);
//   rtzs = xyz_to_cylindrical([[X,Y,Z], [X,Y,Z], ...]);
// Description:
//   Called with three arguments, converts the `x`, `y`, and `z` 3D cartesian coordinate into a `[RADIUS,THETA,Z]` cylindrical coordinate.
//   Called with one `[X,Y,Z]` vector argument, converts the 3D cartesian coordinate into a `[RADIUS,THETA,Z]` cylindrical coordinate.
//   Called with a list of `[X,Y,Z]` vector arguments, converts each 3D cartesian coordinate into `[RADIUS,THETA,Z]` cylindrical coordinates.
//   Theta is the angle counter-clockwise of X+ on the XY plane.  Z is height above the XY plane.
// Arguments:
//   x = X coordinate.
//   y = Y coordinate.
//   z = Z coordinate.
// Example:
//   cyl = xyz_to_cylindrical(20,30,40);
//   cyl = xyz_to_cylindrical([40,50,70]);
//   cyls = xyz_to_cylindrical([[40,50,70], [-10,15,-30]]);