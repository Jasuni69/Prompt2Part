function bend (points,r=0,t=[0,0,0],rev=false)= [
  for (i= [0:len(points)-1])
    let(
      x=points[i].x+t.x,
      y=points[i].y+t.y,
      z=is_undef(points[0].z)?undef:points[i].z + t.z,//
      b=2*PI*(r?r:x),
      deg=b?360/b*y:0
    )
    rev? is_undef(z)?[norm([x,y]),b/360*atan2(y,x)]:[norm(x,y),b/360*atan2(x,y),z]
    
        :is_undef(z)?[sin(deg+90),cos(deg+90)]*x-v3(t):
                    concat([sin(deg+90),cos(deg+90)]*x,z)-v3(t)
    ]
    ;

/*
polygon(
  bend(
    bend(
      sq( center=1, t=[ 10, 0 ] ),
      r=10, rev=true
    ),
    r=10
  )
);

// */


/** \name scene
scene()  creates an array of t for animation scenes
##Example
translate([ scene(2)[0]*10,0])cube();  
translate([ scene(2)[1]*10,1])cube();

\param scenes number of scenes or segments
\param t  the counter 0-1 that is divided into scenes
*/