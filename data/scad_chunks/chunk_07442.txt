module Filter(size=10,dist=.25,h=5,form=1,rand=-.5,rad=1,randH=0,stack=false,layer=layer,line=line,name,help){
//lines Size
ls=line;//n(2+min(.85,dist/nozzle),nozzle=nozzle); // gap max .85 nozzle width
ls2=line;//n(2,nozzle=nozzle); // End lines
//filter size [x,y]
size=is_num(size)?[size,size]:size;
//distance incl. line
es=dist+ls ;

interlace=[1,-1]*es/4;//[-(dist>nozzle*3?es/4:es/8),(dist>nozzle*3?es/4:es/8)];
level=rand?floor((h-layer*2)/layer/2):floor(h/layer/2);

InfoTxt("Filter",["line",ls,"outside",size+(rand>0?[2,2]*rand:[0,0]),"inside",rand>0?size:size+rand*[2,2],"level",level,"filterTop",(rand?layer:0)+level*layer*2],name);
HelpTxt("Filter",["size",size,"dist",dist,"h",h,"form",form,"rand",rand,"rad",rad,"randH",randH,"stack",stack,"layer",layer,"line",line,"name",name],help);



if(rand)
  LinEx(max(h,randH),$info=false)Rand(rand){
    if(form==0)Quad(size,rad=rad);
    if(form==1)scale([1,size.y/size.x])circle(d=size.x);
  }



  intersection(){
  $info=false;
    Tz(rand?layer*1.5:layer/2){
      Linear(level,es=layer*2,z=1){
      $idx2=$idx%2;
      if(rand==0&&form==1){
        color("lightgrey")linear_extrude(layer-.001,center=true)difference(){
          Kreis(d=size.x,r2=size.y/2,rand=ls2);
          T(level==1||stack?0:interlace[$idx2] )Linear(e=(size.x/es),es=es,center=true,x=1)T(y=(($idx%2+$idx2)%2?1:-1)*size.y/2)square([dist,size.y],true);
          
          }
       color("darkgrey")Tz(layer) linear_extrude(layer-0.001,center=true)difference(){
          Kreis(d=size.x,r2=size.y/2,rand=ls2);
          T(y=level==1||stack?0:interlace[$idx2] )Linear(e=(size.y/es),es=es,center=true,y=1)T(( ($idx%2+$idx2)%2?1:-1)*size.x/2)square([size.x,dist],true);
          }
        }
      
      
    // X
       color("lightgrey")T(level==1||stack?0:interlace[$idx%2] ) Linear(e=(size.x)/es+1,es=es,center=true){
        cube([ls ,size.y,layer-.001],true);
        if(rand==0&&form==0) if($idx%2)T(-es/2,size.y/2- ls2 /2)cube([es+ls ,ls2 ,layer-.001],true);
        else T(es*1.5,-size.y/2+ ls2 /2)cube([es+ls ,ls2 ,layer-.001],true);
       }
    // Y
       color("darkgrey")Tz(layer)T(y=level==1||stack?0:interlace[$idx%2]) Linear(e=(size.y)/es+1,es=es,y=1,center=true){
        cube([size.x,ls ,layer-.001],true);
        if(rand==0&&form==0)if($idx%2)T(size.x/2- ls2 /2,-es/2)cube([ls2 ,es+ls,layer-.001],true);
        else T(-size.x/2+ ls2 /2,es*1.5)cube([ls2 ,es+ls ,layer-.001],true);
       }
      }
    }
  if(form==1)linear_extrude(h*3,center=true)offset(rand/2)scale([1,size.y/size.x])circle(d=size.x);
  if(form==0)linear_extrude(h*3,center=true)offset(rand/2)Quad(size,rad=rad);


  }
}


/// Klemmbaustein  construction block Lego compatible
/// KBS(e=[2,4,1],male=true); for a default block