function for_n(n,init,func) =
    assert(is_finite(n))
    assert(is_function(func))
    let(
        n = is_num(n)? [0:1:n-1] : n,
        a = function(x,i) i <= n[2]? a(func(i,x), i+n[1]) : x
    )
    a(init, n[0]);


// Function: find_all()
// Synopsis: Returns the indices of all items in a list that a given function returns true for.
// Topics: Function Literals, Looping, Filters
// See Also: find_all(), reduce(), find_first(), binsearch()
// Usage:
//   indices = find_all(func, list);
//   indices = find_all(function (x) x>1, list);
// Description:
//   Returns the indices of all items in `list` that the function `func` returns true for.
//   In pseudo-code, this is effectively:
//   ```
//   function find_all(func,list):
//       out = [];
//       foreach item in list:
//           if func(item) is true:
//               append item index to out;
//       return out;
//   ```
// Arguments:
//   func = The function of signature `function (x)` to evaluate for each item in `list`.
//   list = The input list.
// Example:
//   func = function(x) x>5;
//   echo(find_all(func, [3,4,5,6,7]));
//   // ECHO: [3,4]