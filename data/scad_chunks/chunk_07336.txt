module CycloidZahn(modul=1,z=10,d=0,linear=false,center=false,spiel=+0.05,fn=fn,fnd,fs=0.01,kreisDivisor=3.50,f=2,scale=1,name,help){
  //if(is_undef(UB)) echo(str("<H1><font color=red> include ub.scad> "));
      
  z1=z%1?floor(z)+0.4999999:z;
  //z=z%1?floor(z)+.5:z;
  z=floor(z*f)/f;
  
  l=modul*PI*z-spiel*2;
  r=modul*z/2;//Wälzkreis
  spielwinkel=spiel/(r*2*PI)*360;
  rund=[modul/5/f,modul/2/f];
  //rund=[0,0];
  //rot=90/z;
  rot=180/z-180/z/f; // for radial
  //tra=modul*PI/4;  // for linear
  tra=modul/2*PI - modul/2*PI/f;  // for linear
  
    kreis=umkreis(z*f,z*modul/2+(modul/kreisDivisor)+(d>r*2?spiel:-spiel)+modul/5*(scale-1));
    $info=false;

//current
  if(!linear)
  Rund(rund[0],rund[1],fs=fs,fa=.5)
   intersection(){
    Polar(z*f,rot=d<r*2?0:180/z/f)//rot=z%1?45/z:90/z)
     intersection (){
       rotate(-rot/2-spielwinkel)  translate([r,0])scale([scale,1])translate([-r,0])Cycloid(modul=modul,z=z,d=d<r*2?d-1:d+1,fn=fn,fnd=fnd,option=2);
       rotate(rot/2+spielwinkel) translate([r,0])scale([scale,1])translate([-r,0])Cycloid(modul=modul,z=z,d=d<r*2?d-1:d+1,fn=fn,fnd=fnd,option=2);
       }
    if(d)Kreis(d=d,rand=d<r*2?-r*2:0,fn=fnd); // achsloch
    if(d<r*2)rotate(180/(z*f))  circle(r=kreis,$fn=z*f); // cut teeth
      else  Kreis(d=d+10,rand=(d/2+5-kreis)+Umkreis(z*2,modul/kreisDivisor*2),rot=0 ,fn=z*f);
    }
  

  lambda=modul*PI;
  //T(0,0.3)square([lambda/f,.1]);
  if(b(linear,bool=false)>0){
  T(center?-l/2:0)Rund(rund[0],rund[1],fs=fs)intersection(){
    T(-tra/2+ lambda/f/4) Linear(e=f,es=lambda/f) intersection(){
        T(+tra/2+spiel-lambda) Cycloid(modul=modul,z=z+2,d=d,linear=linear,fn=fn);
        T(-tra/2-spiel-lambda) Cycloid(modul=modul,z=z+2,d=d,linear=linear,fn=fn);
    }
   T(0,-(linear==true?modul:linear)) square([l,(linear==true?modul:linear)+modul/kreisDivisor]);
  }
  
  
//old ∇
  if(b(linear,bool=false)<0)Polar(z%1?2:1,end=z%1?180+rot:360,r=z%1?0:180/(z*4))
  Rund(modul/10,fs=fs){
    intersection (){
     rotate(-spielwinkel)    Cycloid(modul=modul,z=z1,d=d,fn=fn);
     rotate(rot+spielwinkel) Cycloid(modul=modul,z=z1,d=d,fn=fn);
      if(d<r*2)rotate(-rot/2)  circle(r=kreis,$fn=z*2);
         else  Kreis(d=d+10,rand=(d/2+5-kreis)+Umkreis(z*2,modul/3.5*2),rot=rot/2,fn=z*2);
    }
    rotate(180/z)intersection (){
     rotate(-spielwinkel)   Cycloid(modul=modul,z=z1,d=d,fn=fn);
     rotate(rot+spielwinkel)   Cycloid(modul=modul,z=z1,d=d,fn=fn);
      if(d<r*2) rotate(-rot/2)circle(r=kreis,$fn=z*2);
       else  Kreis(d=d+10,rand=(d/2+5-kreis)+Umkreis(z*2,modul/3.5*2),rot=rot/2,fn=z*2);
    } 
  }  
  
//old Δ

  }
  
InfoTxt("CycloidZahn",concat(["Zähne",z*f],linear?["Länge",l]:["Wälzkreis r",r],[" spiel",spiel]),name);  
HelpTxt("CycloidZahnrad",["modul",modul,"z",z," d",d," linear",linear,"center",center,"spiel",spiel,"fn",fn,"fnd",fnd,"fs",fs,"kreisDivisor",kreisDivisor,"f",f,"scale",scale,"name",name],help);
}

/// cycloid Zahn
//CZahn(modul=2,deg=[60,120],r=15);

/*
f=4;
*CZahn(modul=2,r=15,deg=111.1);
CZahn(modul=2,r=15,deg=99);
rotate(90)Color(){
Tz(-.75)Cycloid(option=2,modul=2,z=15);
Tz(-.5)CycloidZahn(modul=2,z=15,f=f,spiel=0);
}
Rod(pos=[0,14],size=4.0,s=0.3,d=.1,axis=[-1,0,0]);
//*/