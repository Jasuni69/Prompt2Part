module DrawPath(path,width=0.5)
{
  if(is_list(path[0][0]))
  {
    // The coordinates themselves are a 'list'.
    // If there are coordinates at that level,
    // then it is a list of paths.
    // Each path is recursively solved.
    for(i=[0:len(path)-1])
    {
      DrawPath(path[i],width=width);
    }
  }
  else if(is_list(path[0]))
  {
    // If there is a list at path[0],
    // Then it is a single path or a single point.
    if(len(path) == 1)
    {
      // A single point in a list is
      // recursively called with that single point.
      DrawPath(path[0],width=width);
    }
    else if(len(path) > 1)
    {
      // More that one point.
      // That means it is a path between
      // two points or more points.
      for(i=[0:len(path)-2])
      {
        hull()
        {
          for(j=[0,1])
          {
            translate(path[i+j])
            {
              if(is_undef(path[0].z))
                circle(d=width);
              else
                sphere(d=width);
            }
          }
        }
      }
    }
  }
  else
  {
    // There are no deeper levels in the path,
    // that means it is a single coordinate.
    // It could be an empty coordinate.
    // There should be at least two numbers for 
    // a 2D coordinate.
    if(len(path) > 1)
    {
      translate(path)
      {
        if(is_undef(path.z))
          circle(d=width);
        else
          sphere(d=width);
      }
    }
  }
}


// TurtleToPath
// ------------
//
// Turns a list with turtle commands into a path
// for OpenSCAD.
//
// Parameters:
//   turtlelist, a list with commands
//   accuracy, the accuracy of arcs, default $fn
//
// Returns:
//   A list with 2D coordinates.
//
// Start with the starting point [0,0],
// then add the rest from the turtle commands.