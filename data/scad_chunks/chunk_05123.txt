function list_set(list=[],indices,values,dflt=0,minlen=0) =
    assert(is_list(list))
    !is_list(indices)?
        assert(is_finite(indices))
        let(
            index = indices<0 ? indices+len(list) : indices
        )
        assert(index>=0, str("Index ",indices," is smaller than negative list length"))
        (
            index<len(list) ?
                [
                  for(i=[0:1:index-1]) list[i],
                  values,
                  for(i=[index+1:1:len(list)-1]) list[i],
                  for(i=[len(list):1:minlen-1]) dflt
                ]
            : concat(list, repeat(dflt, index-len(list)), [values], repeat(dflt, minlen-index-1))
        )
  : indices==[] && values==[]
      ? concat(list, repeat(dflt, minlen-len(list)))
  : assert(is_vector(indices) && is_list(values) && len(values)==len(indices),
           "Index list and value list must have the same length")
    let(  indices = [for(ind=indices) ind<0 ? ind+len(list) : ind],
          midx = max(len(list)-1, max(indices))
    )
    assert(min(indices)>=0, "Index list contains value smaller than negative list length")
    [
       for (i=[0:1:midx])
           let(
               j = search(i,indices,0),
               k = j[0]
           )
           assert( len(j)<2, "Repeated indices are not allowed." )
           k!=undef ? values[k]
         : i<len(list) ? list[i]
         : dflt,
       each repeat(dflt, minlen-max(len(list),max(indices)+1))
    ];



// Function: list_insert()
// Synopsis: Inserts values into the middle of a list.
// Topics: List Handling
// See Also: list_set(), list_remove(), list_remove_values()
// Usage:
//   list = list_insert(list, indices, values);
// Description:
//   Insert `values` into `list` before position `indices`.  The indices for insertion 
//   are based on the original list, before any insertions have occurred.
//   You can use negative indices to count from the end of the list.  Note that -1 refers
//   to the last element, so the insertion will be *before* the last element.  
// Arguments:
//   list = list to insert items into
//   indices = index or list of indices where values are inserted
//   values = value or list of values to insert
// Example:
//   a = list_insert([3,6,9,12],1,5);  // Returns [3,5,6,9,12]
//   b = list_insert([3,6,9,12],[1,3],[5,11]);  // Returns [3,5,6,9,11,12]