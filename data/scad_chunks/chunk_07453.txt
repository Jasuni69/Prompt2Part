function twist(h)=gradB(r=r,b=tan(deg)*h);

//bottom
rotate(twist(iH[0]-chamfer[0]*(opt==1?2:1)) / (opt==1?2:1) )Roof(iH[0],[1,opt==1?1:0]*chamfer[0],twist=twist(iH[0]-chamfer[0]*(opt==1?2:1)),scale=iScale[0],name=0)
  if($children)children();
  else CycloidZahn(z=iZ,f=f,modul=modul,d=id,spiel=spiel,fn=fn,fnd=fnd,fs=fs,help=0,name=0,scale=stretch);
//center
if(opt==3)Tz(iH[0]-lap)linear_extrude(iH[1]+lap*2,convexity=10,scale=iScale[1])scale(iScale[0])
  if($children)children();
  else CycloidZahn(z=iZ,f=f,modul=modul,d=id,spiel=spiel,fn=fn,fnd=fnd,fs=fs,help=0,name=0,scale=stretch);
 //top 
if(opt>1)Tz(vSum(iH,end=len(iH)-2))Roof(iH[len(iH)-1],[0,1]*chamfer[1],twist=-twist(iH[len(iH)-1]-chamfer[1]),scale=iScale[2],name=0)scale(iScale[1]*iScale[0])
  if($children)children();
  else CycloidZahn(z=iZ,f=f,modul=modul,d=id,spiel=spiel,fn=fn,fnd=fnd,fs=fs,help=0,name=0,scale=stretch);
  
if(deg2!=90&&base)intersection(){
  rotate(twist(base)+twist(iH[0]-chamfer[0]*(opt==1?2:1)) / (opt==1?2:1) )
  Tz(-base)Roof(base+chamfer[0],[1,0]*chamfer[0],twist=twist(base),scale=baseScale,name=0)
    if($children)scale(baseScale)children();
    else scale(1/baseScale)CycloidZahn(z=iZ,f=f,modul=modul,d=id,spiel=spiel,fn=fn,fnd=fnd,fs=fs,help=0,name=0,scale=stretch);
  Tz(-base)Kegel(h=base+chamfer[0],grad=-45,r1=(r-modul/5)/baseScale,name=0); 
 }

HelpTxt("CGear",["z",z,"h",h,"modul",modul,"deg",deg,"d",id,"f",f,"chamfer",chamfer,"spiel",spiel,"lap",lap,"fn",fn,"fnd",fnd,"fs",fs],help);
}



/// cycloid gear