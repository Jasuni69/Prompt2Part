function _validate_screw_spec(spec) =
    let(
        //dummy=echo_struct(spec,"Screw Specification"),
        systemOK = in_list(struct_val(spec,"system"), ["UTS","ISO"]),
        diamOK = _is_positive(struct_val(spec, "diameter")),
        pitch = struct_val(spec,"pitch"),
        pitchOK = is_undef(pitch) || (is_num(pitch) && pitch>=0),
        head = struct_val(spec,"head"),
        headOK = head=="none" || 
                    (in_list(head, ["cheese","pan flat","pan round", "flat", "button","socket","socket ribbed", "fillister","round","hex"]) &&
                     _is_positive(struct_val(spec, "head_size"))),
        flatheadOK = (head!="flat" || _is_positive(struct_val(spec,"head_size_sharp"))),
        drive = struct_val(spec, "drive"),
        driveOK = is_undef(drive) || drive=="none"
                  || (_is_positive(struct_val(spec, "drive_depth")) && _is_positive(struct_val(spec, "drive_size")))
    )
    assert(systemOK, str("Screw spec has invalid \"system\", ", struct_val(spec,"system"), ".  Must be \"ISO\" or \"UTS\""))
    assert(diamOK, str("Screw spec has invalid \"diameter\", ", struct_val(spec,"diameter")))
    assert(pitchOK, str("Screw spec has invalid \"pitch\", ", pitch))
    assert(headOK, "Screw head type invalid or unknown for your screw type and size")  // head is "undef" for invalid heads; we don't know what the user specified
    assert(flatheadOK, "Flat head screw invalid because no \"head_size_sharp\" value is present.")
    assert(driveOK, str("Screw drive type \"",drive,"\" invalid or unknown for your screw size or head type, \"",head,"\""))
    spec;



// Function: thread_specification()
// Synopsis: Returns the thread geometry for a given screw.
// Topics: Threading, Screws
// See Also: screw(), screw_hole()
// Usage:
//   thread_specification(screw_spec, [tolerance], [internal])
// Description:
//   Determines actual thread geometry for a given screw with specified tolerance and nominal size.  See [tolerance](#subsection-tolerance) for
//   information on tolerances.  If tolerance is omitted the default is used.  If tolerance
//   is "none" or 0 then return the nominal thread geometry.  When `internal=true` the nut tolerance is used.  
//   .
//   The return value is a structure with the following fields:
//   - pitch: the thread pitch
//   - d_major: major diameter range
//   - d_pitch: pitch diameter range
//   - d_minor: minor diameter range
//   - basic: vector `[minor, pitch, major]` of the nominal or "basic" diameters for the threads
// Arguments:
//   screw_spec = screw specification structure
//   tolerance = thread geometry tolerance.  Default: For ISO, "6g" for screws, "6H" for internal threading (nuts).  For UTS, "2A" for screws, "2B" for internal threading (nuts).
//   internal = true for internal threads.  Default: false