module contour(f, isovalue, bounding_box, pixel_size, pixel_count=undef, use_centers=true, smoothing=undef, exact_bounds=false, cp="centroid", anchor="origin", spin=0, atype="hull", show_stats=false, show_box=false, _mball=false) {
    pathlist = contour(f, isovalue, bounding_box, pixel_size, pixel_count, use_centers, smoothing, true, exact_bounds, show_stats, _mball);
    assert(len(pathlist)>0, "\nNo contour lines found! Cannot generate polygon. Check your isovalue.")
        attachable(anchor, spin, two_d=true, region=pathlist, extent=atype=="hull", cp=cp) {
            region(pathlist, anchor=anchor, spin=spin, cp=cp, atype=atype);
            children();
        }
    if(show_box)
        let(
            bbox0 = is_num(bounding_box)
            ? let(hb=0.5*bounding_box) [[-hb,-hb],[hb,hb]]
            : bounding_box,
            autopixsize = is_def(pixel_size) ? pixel_size : _getautopixsize(bbox0, default(pixel_count,32^2)),
            pixsize = _mball ? pixel_size : _getpixsize(autopixsize, bbox0, exact_bounds),
            bbox = _mball ? bounding_box : _getbbox2d(pixsize, bbox0, exact_bounds, f)
        ) %translate([bbox[0][0],bbox[0][1],-0.05]) linear_extrude(0.1) square(bbox[1]-bbox[0]);
}