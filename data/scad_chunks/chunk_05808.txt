module metric_nut(
    size=3,
    hole=true,
    pitch=undef,
    details=false,
    flange=0,
    center,
    anchor,
    spin=0,
    orient=UP
) {
    H = get_metric_nut_thickness(size);
    D = get_metric_nut_size(size);
    boltfn = max(12, segs(size/2));
    nutfn = max(12, segs(D/2));
    dcirc = D/cos(30);
    bevtop = (dcirc - D)/2;

    //color("silver")
    anchor = get_anchor(anchor,center,BOT,CENTER);
    attachable(anchor,spin,orient, d=dcirc+flange, l=H) {
        difference() {
            union() {
                difference() {
                    cylinder(d=dcirc, h=H, center=true, $fn=6);
                    if (details) {
                        up(H/2-bevtop) {
                            difference() {
                                cube([dcirc+1, dcirc+1, bevtop+0.5], anchor=BOTTOM);
                                down(0.01) cylinder(d1=dcirc, d2=dcirc-bevtop*2, h=bevtop+0.02, center=false, $fn=nutfn);
                            }
                        }
                        if (flange == 0) {
                            down(H/2) {
                                difference() {
                                    down(0.5) cube([dcirc+1, dcirc+1, bevtop+0.5], anchor=BOTTOM);
                                    down(0.01) cylinder(d1=dcirc-bevtop*2, d2=dcirc, h=bevtop+0.02, center=false, $fn=nutfn);
                                }
                            }
                        }
                    }
                }
                if (flange>0) {
                    down(H/2) {
                        cylinder(d=D+flange, h=H/8, center=false);
                        up(H/8) cylinder(d1=D+flange, d2=D, h=H/8, center=false);
                    }
                }
            }
            if (hole == true) {
                if (pitch == undef) {
                    cylinder(r=size/2, h=H+0.5, center=true, $fn=boltfn);
                } else {
                    threaded_rod(d=size, l=H+0.5, pitch=pitch, $fn=boltfn);
                }
            }
        }
        children();
    }
}


// vim: expandtab tabstop=4 shiftwidth=4 softtabstop=4 nowrap