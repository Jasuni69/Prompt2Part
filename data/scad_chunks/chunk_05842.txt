function vector_bisect(v1,v2) =
    assert(is_vector(v1))
    assert(is_vector(v2))
    assert(!approx(norm(v1),0), "\nZero length vector.")
    assert(!approx(norm(v2),0), "\nZero length vector.")
    assert(len(v1)==len(v2), "\nVectors are of different sizes.")
    let( v1 = unit(v1), v2 = unit(v2) )
    approx(v1,-v2)? undef :
    let(
        axis = vector_axis(v1,v2),
        ang = vector_angle(v1,v2),
        v3 = unit(rot(ang/2, v=axis, p=v1))
    ) v3;


// Function: vector_perp()
// Synopsis: Returns component of a vector perpendicular to a second vector
// Topics: Vectors, Math
// Usage:
//   perp = vector_perp(v,w);
// Description:
//   Returns the component of vector w that is perpendicular to vector v.  Vectors must have the same length.  
// Arguments:
//   v = reference vector
//   w = vector whose perpendicular component is returned
// Example(2D):  We extract the component of the red vector that is perpendicular to the yellow vector.  That component appears in blue.  
//   v = [12,6];
//   w = [13,22];
//   stroke([[0,0],v],endcap2="arrow2");
//   stroke([[0,0],w],endcap2="arrow2",color="red");
//   stroke([[0,0],vector_perp(v,w)], endcap2="arrow2", color="blue");