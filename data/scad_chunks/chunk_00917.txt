module insert_lug(insert, wall, counter_bore = 0, extension = 0, corner_r = 0, flying = true) { //! Make a flying insert lug, see [ssr_shroud](#Ssr_shroud)
    boss_r = insert_boss_radius(insert, wall);
    boss_h = insert_hole_length(insert);
    boss_h2 = boss_h + counter_bore;

    module shape() {
        module _shape()
            hull() {
                circle(boss_r);

                translate([boss_r + extension - eps, 0])
                    square([eps, 2 * boss_r], center = true);
            }

        if(corner_r)
            intersection() {
                _shape();

                translate([boss_r + extension - corner_r, 0])
                    rotate(-45)
                        quadrant(w = 100, r = corner_r - eps, center = true);
            }
        else
            _shape();
    }

    translate_z(-boss_h)
        linear_extrude(boss_h)
             difference() {
                shape();

                poly_circle(insert_hole_radius(insert));
            }

    // insert boss counter_bore
    translate_z(-boss_h2) {
        linear_extrude(counter_bore + eps)
             difference() {
                shape();

                poly_circle(insert_screw_diameter(insert) / 2 + 0.1);
            }

        // support cone
        if(flying)
            hull() {
                linear_extrude(eps)
                    shape();

                translate([boss_r + extension - wall - eps, 0, - (2 * boss_r + extension - wall)])
                    cube(eps, center = true);
            }
    }
}