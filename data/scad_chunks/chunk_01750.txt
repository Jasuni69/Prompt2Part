module molex_254(ways, right_angle = 0, skip = undef) { //! Draw molex KK header, set `right_angle` to 1 for normal right angle version or -1 for inverted right angle version.
    vitamin(str("molex_254(", ways, arg(right_angle, 0, "right_angle"), arg(skip, undef, "skip"), "): Molex KK header ", ways, " way", right_angle ? " right angle" : ""));
    pitch = 2.54;
    width = ways * pitch - 0.1;
    depth = 6.35;
    height = 8.15;
    base = 3.18;
    back = 1;
    below = 3.3;
    above = 9;
    pin_w = 0.64;
    r = 1;
    a = right_angle ? depth / 2 - r : above;
    ra_offset = 2.2;

    color("white")
        translate(right_angle ? [-ra_offset, 0, depth / 2] : [ 0, 0, 0])
            rotate(right_angle ? right_angle > 0 ? [180, 90, 0] : [0, -90, 0] : [ 0, 0, 0]) {
                union() {
                    translate([ -depth / 2, -width / 2,])
                        cube([depth, width, base]);

                    w = width - pitch;
                    translate([- depth / 2, -w / 2])
                        cube([back, w, height]);
                 }

                 if(show_plugs)
                    translate_z(base + 0.1)
                        molex_254_housing(ways);
            }

    color("silver")
        for(i = [0 : ways -1])
            if(is_undef(skip) || !in(skip, i))
                translate([0, i * pitch - width / 2 + pitch / 2]) {
                    chamfer = pin_w / 2;
                    l1 = a + below;
                    translate_z(l1 / 2 - below)
                        hull() {
                            cube([pin_w, pin_w, l1 - 2 * chamfer], center = true);

                            cube([pin_w - chamfer, pin_w - chamfer, l1], center = true);
                        }

                    solder();

                    l = above + ra_offset - r;
                    if(right_angle) {
                        translate([-l / 2 - r, 0, depth / 2])
                            hull() {
                                cube([l - 2 * chamfer, pin_w, pin_w], center = true);

                                cube([l, pin_w - chamfer, pin_w - chamfer], center = true);
                            }

                        translate([-r - pin_w / 2, 0, a - pin_w / 2])
                            rotate([90, 0, 0])
                                rotate_extrude(angle = 90)
                                    translate([r + pin_w / 2, 0])
                                        square(pin_w, true);
                    }
                }
}