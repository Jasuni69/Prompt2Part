function bezier_curvature(bezier, u) =
    is_num(u) ? bezier_curvature(bezier,[u])[0] :
    let(
        d1 = bezier_derivative(bezier, u, 1),
        d2 = bezier_derivative(bezier, u, 2)
    ) [
        for(i=idx(d1))
        sqrt(
            sqr(norm(d1[i])*norm(d2[i])) -
            sqr(d1[i]*d2[i])
        ) / pow(norm(d1[i]),3)
    ];



// Function: bezier_closest_point()
// Synopsis: Finds the closest position on a bezier curve to a given point.
// Topics: Bezier Curves
// See Also: bezier_points()
// Usage:
//   u = bezier_closest_point(bezier, pt, [max_err]);
// Description:
//   Finds the closest part of the given bezier curve to point `pt`.
//   The degree of the curve, N, is one less than the number of points in `curve`.
//   Returns `u` for the closest position on the bezier curve to the given point `pt`.
// Arguments:
//   bezier = The list of control points that define the Bezier curve. 
//   pt = The point to find the closest curve point to.
//   max_err = The maximum allowed error when approximating the closest approach.
// Example(2D):
//   pt = [40,15];
//   bez = [[0,0], [20,40], [60,-25], [80,0]];
//   u = bezier_closest_point(bez, pt);
//   debug_bezier(bez, N=len(bez)-1);
//   color("red") translate(pt) sphere(r=1);
//   color("blue") translate(bezier_points(bez,u)) sphere(r=1);