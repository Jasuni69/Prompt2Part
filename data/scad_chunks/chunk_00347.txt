module mains_socket(type) { //! Draw specified 13A socket
    offset = mains_socket_offset(type);
    screw = mains_socket_screw(type);
    height =  mains_socket_height(type);
    width = mains_socket_width(type);

    vitamin(str("mains_socket(", type[0], "): Mains socket 13A", offset.x || offset.y ? ", switched" : ""));

    color("white") render() difference() {
        hull() {
            linear_extrude(eps)
                face_plate(type);

            linear_extrude(height)
                offset(-(width - mains_socket_top_w(type)) / 2)
                    face_plate(type);
        }
        // Holes for pins
        translate([offset.x, offset.y, mains_socket_height(type)]) {
            for(side = [-1, 1])
                translate([side * 11.1, -11.1])
                    cube([7, 4.5, 8], center = true);

            translate([0, 11.1])
                cube([4.5, 8.5, 8], center = true);
        }
        // Hollow out the back
        difference() {
            linear_extrude(height - mains_socket_t(type))
                offset(-mains_socket_t(type))
                    face_plate(type);

            cube(50, center = true);

            cube([mains_socket_top_w(type), 13, 2 * height + 1], center = true);
        }
        // Screw holes
        mains_socket_hole_positions(type) {
            cylinder(r = screw_clearance_radius(screw), h = 100, center = true);

            counter_bore =  mains_socket_counterbore(type);
            translate_z(height - counter_bore[0]) {
                screw_countersink(screw, drilled = false);

                if(counter_bore[1])
                    cylinder(d = counter_bore[1], h = height);

                if(counter_bore[2])
                    vflip()
                        cylinder(d = counter_bore[2], h = height);
            }
        }
    }
}