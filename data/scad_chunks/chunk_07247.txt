function map(val=$t,from=[0,1],to=[0,1],constrain=true)=
  let (
     from=is_num(from[2])?[from[0],from[2]]:from,
     to=  is_num(to[2])  ?[to[0]  ,to[2]]  :to,
     
    diff1=from[1]-from[0],
    diff2=to[1]-to[0]
  )
  constrain?min(max(diff2/diff1*( val - from[0] )+to[0],min(to) ),max(to) ):
             diff2/diff1*(val-from[0])+to[0];
  
/** \page Functions
polyRund() replace points with arcs and offset
\name polyRund
\param points points input
\param r radius to round (can be list)
\param ir inner radius (if r is not list)
\param ofs offset of radii
\param delta change offset without radius
\param fn fs  fragments for arcs (can be lists)
\param minF minimum fragments
\param rev  if input has reversed point order
*/

/*  // \example
p=[
[0,0],
[10,0],
[10,10],
[5,2],
[0,10]
];
T(y=15)color("pink")polygon(polyRund(revP(p),delta=+0,r=+0.5,ir=1,ofs=1.0,rev=true));
polygon(polyRund(p,delta=+0,r=+0.5,ir=1,ofs=1));
// */